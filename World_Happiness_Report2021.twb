<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.22.1117.1841                               -->
<workbook original-version='18.1' source-build='2022.4.0 (20224.22.1117.1841)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='World_Happiness_Report_Cleaned_regional.csv (Connexions multiples)' inline='true' name='federated.1nhd3fc110lvo81goyeni0xcvkzs' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='World_Happiness_Report_Cleaned_regional' name='textscan.02ayeha161ujph181vc2o1gq8e8g'>
            <connection class='textscan' directory='C:/Users/Rachad/Desktop/Rachad/Ironhack/Project05' filename='World_Happiness_Report_Cleaned_regional.csv' password='' server='' />
          </named-connection>
          <named-connection caption='World_Happiness_Report_Cleaned' name='textscan.1vqzhio1f2ehwc149yxtw09ycuzw'>
            <connection class='textscan' directory='C:/Users/Rachad/Desktop/Rachad/Ironhack/Project05' filename='World_Happiness_Report_Cleaned.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.02ayeha161ujph181vc2o1gq8e8g' name='World_Happiness_Report_Cleaned_regional.csv' table='[World_Happiness_Report_Cleaned_regional#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='fr_FR'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country_name' ordinal='1' />
            <column datatype='string' name='Regional_indicator' ordinal='2' />
            <column datatype='real' name='Ladder_score' ordinal='3' />
            <column datatype='real' name='Standard_error_of_ladder_score' ordinal='4' />
            <column datatype='real' name='upperwhisker' ordinal='5' />
            <column datatype='real' name='lowerwhisker' ordinal='6' />
            <column datatype='real' name='Logged_GDP_per_capita' ordinal='7' />
            <column datatype='real' name='Social_support' ordinal='8' />
            <column datatype='real' name='Healthy_life_expectancy' ordinal='9' />
            <column datatype='real' name='Freedom_to_make_life_choices' ordinal='10' />
            <column datatype='real' name='Generosity' ordinal='11' />
            <column datatype='real' name='Perceptions_of_corruption' ordinal='12' />
            <column datatype='real' name='Ladder_score_in_Dystopia' ordinal='13' />
            <column datatype='real' name='Explained_by:_Log_GDP_per_capita' ordinal='14' />
            <column datatype='real' name='Explained_by:_Social_support' ordinal='15' />
            <column datatype='real' name='Explained_by:_Healthy_life_expectancy' ordinal='16' />
            <column datatype='real' name='Explained_by:_Freedom_to_make_life_choices' ordinal='17' />
            <column datatype='real' name='Explained_by:_Generosity' ordinal='18' />
            <column datatype='real' name='Explained_by:_Perceptions_of_corruption' ordinal='19' />
            <column datatype='real' name='Dystopia_+_residual' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.02ayeha161ujph181vc2o1gq8e8g' name='World_Happiness_Report_Cleaned_regional.csv' table='[World_Happiness_Report_Cleaned_regional#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='fr_FR'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country_name' ordinal='1' />
            <column datatype='string' name='Regional_indicator' ordinal='2' />
            <column datatype='real' name='Ladder_score' ordinal='3' />
            <column datatype='real' name='Standard_error_of_ladder_score' ordinal='4' />
            <column datatype='real' name='upperwhisker' ordinal='5' />
            <column datatype='real' name='lowerwhisker' ordinal='6' />
            <column datatype='real' name='Logged_GDP_per_capita' ordinal='7' />
            <column datatype='real' name='Social_support' ordinal='8' />
            <column datatype='real' name='Healthy_life_expectancy' ordinal='9' />
            <column datatype='real' name='Freedom_to_make_life_choices' ordinal='10' />
            <column datatype='real' name='Generosity' ordinal='11' />
            <column datatype='real' name='Perceptions_of_corruption' ordinal='12' />
            <column datatype='real' name='Ladder_score_in_Dystopia' ordinal='13' />
            <column datatype='real' name='Explained_by:_Log_GDP_per_capita' ordinal='14' />
            <column datatype='real' name='Explained_by:_Social_support' ordinal='15' />
            <column datatype='real' name='Explained_by:_Healthy_life_expectancy' ordinal='16' />
            <column datatype='real' name='Explained_by:_Freedom_to_make_life_choices' ordinal='17' />
            <column datatype='real' name='Explained_by:_Generosity' ordinal='18' />
            <column datatype='real' name='Explained_by:_Perceptions_of_corruption' ordinal='19' />
            <column datatype='real' name='Dystopia_+_residual' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[World_Happiness_Report_Cleaned_regional.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;€&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;fr_FR&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot; &quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned_regional.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned_regional.csv_3A89066CFB6F49A5A5B790F28198731E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country_name]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned_regional.csv]</parent-name>
            <remote-alias>Country_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned_regional.csv_3A89066CFB6F49A5A5B790F28198731E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Regional_indicator</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Regional_indicator]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned_regional.csv]</parent-name>
            <remote-alias>Regional_indicator</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LFR_RFR' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned_regional.csv_3A89066CFB6F49A5A5B790F28198731E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ladder_score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Ladder_score]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned_regional.csv]</parent-name>
            <remote-alias>Ladder_score</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned_regional.csv_3A89066CFB6F49A5A5B790F28198731E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Standard_error_of_ladder_score</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Standard_error_of_ladder_score]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned_regional.csv]</parent-name>
            <remote-alias>Standard_error_of_ladder_score</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned_regional.csv_3A89066CFB6F49A5A5B790F28198731E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>upperwhisker</remote-name>
            <remote-type>5</remote-type>
            <local-name>[upperwhisker]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned_regional.csv]</parent-name>
            <remote-alias>upperwhisker</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned_regional.csv_3A89066CFB6F49A5A5B790F28198731E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lowerwhisker</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lowerwhisker]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned_regional.csv]</parent-name>
            <remote-alias>lowerwhisker</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned_regional.csv_3A89066CFB6F49A5A5B790F28198731E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Logged_GDP_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Logged_GDP_per_capita]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned_regional.csv]</parent-name>
            <remote-alias>Logged_GDP_per_capita</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned_regional.csv_3A89066CFB6F49A5A5B790F28198731E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Social_support</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Social_support]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned_regional.csv]</parent-name>
            <remote-alias>Social_support</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned_regional.csv_3A89066CFB6F49A5A5B790F28198731E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Healthy_life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Healthy_life_expectancy]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned_regional.csv]</parent-name>
            <remote-alias>Healthy_life_expectancy</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned_regional.csv_3A89066CFB6F49A5A5B790F28198731E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Freedom_to_make_life_choices</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Freedom_to_make_life_choices]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned_regional.csv]</parent-name>
            <remote-alias>Freedom_to_make_life_choices</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned_regional.csv_3A89066CFB6F49A5A5B790F28198731E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Generosity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Generosity]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned_regional.csv]</parent-name>
            <remote-alias>Generosity</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned_regional.csv_3A89066CFB6F49A5A5B790F28198731E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Perceptions_of_corruption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Perceptions_of_corruption]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned_regional.csv]</parent-name>
            <remote-alias>Perceptions_of_corruption</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned_regional.csv_3A89066CFB6F49A5A5B790F28198731E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ladder_score_in_Dystopia</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Ladder_score_in_Dystopia]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned_regional.csv]</parent-name>
            <remote-alias>Ladder_score_in_Dystopia</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned_regional.csv_3A89066CFB6F49A5A5B790F28198731E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Explained_by:_Log_GDP_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Explained_by:_Log_GDP_per_capita]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned_regional.csv]</parent-name>
            <remote-alias>Explained_by:_Log_GDP_per_capita</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned_regional.csv_3A89066CFB6F49A5A5B790F28198731E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Explained_by:_Social_support</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Explained_by:_Social_support]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned_regional.csv]</parent-name>
            <remote-alias>Explained_by:_Social_support</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned_regional.csv_3A89066CFB6F49A5A5B790F28198731E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Explained_by:_Healthy_life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Explained_by:_Healthy_life_expectancy]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned_regional.csv]</parent-name>
            <remote-alias>Explained_by:_Healthy_life_expectancy</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned_regional.csv_3A89066CFB6F49A5A5B790F28198731E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Explained_by:_Freedom_to_make_life_choices</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Explained_by:_Freedom_to_make_life_choices]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned_regional.csv]</parent-name>
            <remote-alias>Explained_by:_Freedom_to_make_life_choices</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned_regional.csv_3A89066CFB6F49A5A5B790F28198731E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Explained_by:_Generosity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Explained_by:_Generosity]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned_regional.csv]</parent-name>
            <remote-alias>Explained_by:_Generosity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned_regional.csv_3A89066CFB6F49A5A5B790F28198731E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Explained_by:_Perceptions_of_corruption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Explained_by:_Perceptions_of_corruption]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned_regional.csv]</parent-name>
            <remote-alias>Explained_by:_Perceptions_of_corruption</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned_regional.csv_3A89066CFB6F49A5A5B790F28198731E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dystopia_+_residual</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Dystopia_+_residual]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned_regional.csv]</parent-name>
            <remote-alias>Dystopia_+_residual</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned_regional.csv_3A89066CFB6F49A5A5B790F28198731E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Country name' datatype='string' name='[Country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Dystopia + residual' datatype='real' name='[Dystopia_+_residual]' role='measure' type='quantitative' />
      <column caption='Explained by: Freedom to make life choices' datatype='real' name='[Explained_by:_Freedom_to_make_life_choices]' role='measure' type='quantitative' />
      <column caption='Explained by: Generosity' datatype='real' name='[Explained_by:_Generosity]' role='measure' type='quantitative' />
      <column caption='Explained by: Healthy life expectancy' datatype='real' name='[Explained_by:_Healthy_life_expectancy]' role='measure' type='quantitative' />
      <column caption='Explained by: Log GDP per capita' datatype='real' name='[Explained_by:_Log_GDP_per_capita]' role='measure' type='quantitative' />
      <column caption='Explained by: Perceptions of corruption' datatype='real' name='[Explained_by:_Perceptions_of_corruption]' role='measure' type='quantitative' />
      <column caption='Explained by: Social support' datatype='real' name='[Explained_by:_Social_support]' role='measure' type='quantitative' />
      <column caption='Freedom to make life choices' datatype='real' name='[Freedom_to_make_life_choices]' role='measure' type='quantitative' />
      <column caption='Healthy life expectancy' datatype='real' name='[Healthy_life_expectancy]' role='measure' type='quantitative' />
      <column caption='Ladder score' datatype='real' name='[Ladder_score]' role='measure' type='quantitative' />
      <column caption='Ladder score in Dystopia' datatype='real' name='[Ladder_score_in_Dystopia]' role='measure' type='quantitative' />
      <column caption='Logged GDP per capita' datatype='real' name='[Logged_GDP_per_capita]' role='measure' type='quantitative' />
      <column caption='Perceptions of corruption' datatype='real' name='[Perceptions_of_corruption]' role='measure' type='quantitative' />
      <column caption='Regional indicator' datatype='string' name='[Regional_indicator]' role='dimension' type='nominal' />
      <column caption='Social support' datatype='real' name='[Social_support]' role='measure' type='quantitative' />
      <column caption='Standard error of ladder score' datatype='real' name='[Standard_error_of_ladder_score]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='World_Happiness_Report_Cleaned_regional.csv' datatype='table' name='[__tableau_internal_object_id__].[World_Happiness_Report_Cleaned_regional.csv_3A89066CFB6F49A5A5B790F28198731E]' role='measure' type='quantitative' />
      <column caption='Lowerwhisker' datatype='real' name='[lowerwhisker]' role='measure' type='quantitative' />
      <column caption='Upperwhisker' datatype='real' name='[upperwhisker]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Liban&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='World_Happiness_Report_Cleaned_regional.csv' id='World_Happiness_Report_Cleaned_regional.csv_3A89066CFB6F49A5A5B790F28198731E'>
            <properties context=''>
              <relation connection='textscan.02ayeha161ujph181vc2o1gq8e8g' name='World_Happiness_Report_Cleaned_regional.csv' table='[World_Happiness_Report_Cleaned_regional#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='fr_FR'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Country_name' ordinal='1' />
                  <column datatype='string' name='Regional_indicator' ordinal='2' />
                  <column datatype='real' name='Ladder_score' ordinal='3' />
                  <column datatype='real' name='Standard_error_of_ladder_score' ordinal='4' />
                  <column datatype='real' name='upperwhisker' ordinal='5' />
                  <column datatype='real' name='lowerwhisker' ordinal='6' />
                  <column datatype='real' name='Logged_GDP_per_capita' ordinal='7' />
                  <column datatype='real' name='Social_support' ordinal='8' />
                  <column datatype='real' name='Healthy_life_expectancy' ordinal='9' />
                  <column datatype='real' name='Freedom_to_make_life_choices' ordinal='10' />
                  <column datatype='real' name='Generosity' ordinal='11' />
                  <column datatype='real' name='Perceptions_of_corruption' ordinal='12' />
                  <column datatype='real' name='Ladder_score_in_Dystopia' ordinal='13' />
                  <column datatype='real' name='Explained_by:_Log_GDP_per_capita' ordinal='14' />
                  <column datatype='real' name='Explained_by:_Social_support' ordinal='15' />
                  <column datatype='real' name='Explained_by:_Healthy_life_expectancy' ordinal='16' />
                  <column datatype='real' name='Explained_by:_Freedom_to_make_life_choices' ordinal='17' />
                  <column datatype='real' name='Explained_by:_Generosity' ordinal='18' />
                  <column datatype='real' name='Explained_by:_Perceptions_of_corruption' ordinal='19' />
                  <column datatype='real' name='Dystopia_+_residual' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='World_Happiness_Report_Cleaned' inline='true' name='federated.0dyzype106d9b31ck49fa0y7r6m6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='World_Happiness_Report_Cleaned' name='textscan.01v6i7b0leqok114t11u91a2gydg'>
            <connection class='textscan' cleaning='yes' compat='no' csvFile='C:/Users/Rachad/Desktop/Rachad/Ironhack/Project05/World_Happiness_Report_Cleaned.csv' dataRefreshTime='' directory='C:/Users/Rachad/Desktop/Rachad/Ironhack/Project05' filename='C:/Users/Rachad/AppData/Local/Temp/TableauTemp/1axkdku0m0xym11cntuo006zpnnq/World_Happiness_Report_Cleaned.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.01v6i7b0leqok114t11u91a2gydg' name='World_Happiness_Report_Cleaned.csv' table='[C:\Users\Rachad\Desktop\Rachad\Ironhack\Project05\World_Happiness_Report_Cleaned#csv]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:L1879:no:A1:L1879:1' header='yes' locale='en_US' separator=';'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country_name' ordinal='1' />
            <column datatype='integer' name='year' ordinal='2' />
            <column datatype='real' name='Life_Ladder' ordinal='3' />
            <column datatype='real' name='Log_GDP_per_capita' ordinal='4' />
            <column datatype='real' name='Social_support' ordinal='5' />
            <column datatype='real' name='Healthy_life_expectancy_at_birth' ordinal='6' />
            <column datatype='real' name='Freedom_to_make_life_choices' ordinal='7' />
            <column datatype='real' name='Generosity' ordinal='8' />
            <column datatype='real' name='Perceptions_of_corruption' ordinal='9' />
            <column datatype='real' name='Positive_affect' ordinal='10' />
            <column datatype='real' name='Negative_affect' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.01v6i7b0leqok114t11u91a2gydg' name='World_Happiness_Report_Cleaned.csv' table='[C:\Users\Rachad\Desktop\Rachad\Ironhack\Project05\World_Happiness_Report_Cleaned#csv]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:L1879:no:A1:L1879:1' header='yes' locale='en_US' separator=';'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country_name' ordinal='1' />
            <column datatype='integer' name='year' ordinal='2' />
            <column datatype='real' name='Life_Ladder' ordinal='3' />
            <column datatype='real' name='Log_GDP_per_capita' ordinal='4' />
            <column datatype='real' name='Social_support' ordinal='5' />
            <column datatype='real' name='Healthy_life_expectancy_at_birth' ordinal='6' />
            <column datatype='real' name='Freedom_to_make_life_choices' ordinal='7' />
            <column datatype='real' name='Generosity' ordinal='8' />
            <column datatype='real' name='Perceptions_of_corruption' ordinal='9' />
            <column datatype='real' name='Positive_affect' ordinal='10' />
            <column datatype='real' name='Negative_affect' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[World_Happiness_Report_Cleaned.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:L1879:no:A1:L1879:1&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned.csv_5AEA971ECB8B4075BC602C85C399FF2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country_name]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned.csv]</parent-name>
            <remote-alias>Country_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned.csv_5AEA971ECB8B4075BC602C85C399FF2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned.csv_5AEA971ECB8B4075BC602C85C399FF2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life_Ladder</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Life_Ladder]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned.csv]</parent-name>
            <remote-alias>Life_Ladder</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned.csv_5AEA971ECB8B4075BC602C85C399FF2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Log_GDP_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Log_GDP_per_capita]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned.csv]</parent-name>
            <remote-alias>Log_GDP_per_capita</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned.csv_5AEA971ECB8B4075BC602C85C399FF2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Social_support</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Social_support]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned.csv]</parent-name>
            <remote-alias>Social_support</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned.csv_5AEA971ECB8B4075BC602C85C399FF2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Healthy_life_expectancy_at_birth</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Healthy_life_expectancy_at_birth]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned.csv]</parent-name>
            <remote-alias>Healthy_life_expectancy_at_birth</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned.csv_5AEA971ECB8B4075BC602C85C399FF2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Freedom_to_make_life_choices</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Freedom_to_make_life_choices]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned.csv]</parent-name>
            <remote-alias>Freedom_to_make_life_choices</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned.csv_5AEA971ECB8B4075BC602C85C399FF2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Generosity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Generosity]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned.csv]</parent-name>
            <remote-alias>Generosity</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned.csv_5AEA971ECB8B4075BC602C85C399FF2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Perceptions_of_corruption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Perceptions_of_corruption]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned.csv]</parent-name>
            <remote-alias>Perceptions_of_corruption</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned.csv_5AEA971ECB8B4075BC602C85C399FF2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Positive_affect</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Positive_affect]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned.csv]</parent-name>
            <remote-alias>Positive_affect</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned.csv_5AEA971ECB8B4075BC602C85C399FF2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Negative_affect</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Negative_affect]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned.csv]</parent-name>
            <remote-alias>Negative_affect</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned.csv_5AEA971ECB8B4075BC602C85C399FF2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Freedom_to_make_life_choices:qk]&quot;' value='Freedom to make life choices: 0 or 1' />
          <alias key='&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Healthy_life_expectancy_at_birth:qk]&quot;' value='Healthy life expectancy at birth' />
          <alias key='&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]&quot;' value='Life Ladder: 0 - 10' />
          <alias key='&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Log_GDP_per_capita:qk]&quot;' value='Log GDP per capita' />
          <alias key='&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Perceptions_of_corruption:qk]&quot;' value='Perceptions of corruption: 0 or 1' />
          <alias key='&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Social_support:qk]&quot;' value='Social support: 0 or 1' />
        </aliases>
      </column>
      <column caption='Country name' datatype='string' name='[Country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[F1]' role='measure' type='quantitative' />
      <column caption='Freedom to make life choices' datatype='real' name='[Freedom_to_make_life_choices]' role='measure' type='quantitative' />
      <column datatype='real' name='[Generosity]' role='measure' type='quantitative' />
      <column caption='Healthy life expectancy at birth' datatype='real' name='[Healthy_life_expectancy_at_birth]' role='measure' type='quantitative' />
      <column caption='Life Ladder' datatype='real' name='[Life_Ladder]' role='measure' type='quantitative' />
      <column caption='Log GDP per capita' datatype='real' name='[Log_GDP_per_capita]' role='measure' type='quantitative' />
      <column caption='Negative affect' datatype='real' name='[Negative_affect]' role='measure' type='quantitative' />
      <column caption='Perceptions of corruption' datatype='real' name='[Perceptions_of_corruption]' role='measure' type='quantitative' />
      <column caption='Positive affect' datatype='real' name='[Positive_affect]' role='measure' type='quantitative' />
      <column caption='Social support' datatype='real' name='[Social_support]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='World_Happiness_Report_Cleaned.csv' datatype='table' name='[__tableau_internal_object_id__].[World_Happiness_Report_Cleaned.csv_5AEA971ECB8B4075BC602C85C399FF2E]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[World_Happiness_Report_Cleaned.csv_5AEA971ECB8B4075BC602C85C399FF2E]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:World_Happiness_Report_Cleaned.csv_5AEA971ECB8B4075BC602C85C399FF2E:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Freedom_to_make_life_choices]' derivation='Avg' name='[avg:Freedom_to_make_life_choices:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Generosity]' derivation='Avg' name='[avg:Generosity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Healthy_life_expectancy_at_birth]' derivation='Avg' name='[avg:Healthy_life_expectancy_at_birth:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Life_Ladder]' derivation='Avg' name='[avg:Life_Ladder:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Log_GDP_per_capita]' derivation='Avg' name='[avg:Log_GDP_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Perceptions_of_corruption]' derivation='Avg' name='[avg:Perceptions_of_corruption:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Social_support]' derivation='Avg' name='[avg:Social_support:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Freedom_to_make_life_choices]' derivation='Avg' name='[diff:avg:Freedom_to_make_life_choices:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Generosity]' derivation='Avg' name='[diff:avg:Generosity:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Healthy_life_expectancy_at_birth]' derivation='Avg' name='[diff:avg:Healthy_life_expectancy_at_birth:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Life_Ladder]' derivation='Avg' name='[diff:avg:Life_Ladder:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Log_GDP_per_capita]' derivation='Avg' name='[diff:avg:Log_GDP_per_capita:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Perceptions_of_corruption]' derivation='Avg' name='[diff:avg:Perceptions_of_corruption:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Social_support]' derivation='Avg' name='[diff:avg:Social_support:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Country_name]' derivation='None' name='[none:Country_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Freedom_to_make_life_choices]' derivation='Avg' name='[pcto:avg:Freedom_to_make_life_choices:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Generosity]' derivation='Avg' name='[pcto:avg:Generosity:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Life_Ladder]' derivation='Avg' name='[pcto:avg:Life_Ladder:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Log_GDP_per_capita]' derivation='Avg' name='[pcto:avg:Log_GDP_per_capita:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Perceptions_of_corruption]' derivation='Avg' name='[pcto:avg:Perceptions_of_corruption:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Social_support]' derivation='Avg' name='[pcto:avg:Social_support:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[F1]' derivation='Sum' name='[sum:F1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Freedom_to_make_life_choices]' derivation='Sum' name='[sum:Freedom_to_make_life_choices:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Generosity]' derivation='Sum' name='[sum:Generosity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Healthy_life_expectancy_at_birth]' derivation='Sum' name='[sum:Healthy_life_expectancy_at_birth:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Life_Ladder]' derivation='Sum' name='[sum:Life_Ladder:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Log_GDP_per_capita]' derivation='Sum' name='[sum:Log_GDP_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Negative_affect]' derivation='Sum' name='[sum:Negative_affect:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Perceptions_of_corruption]' derivation='Sum' name='[sum:Perceptions_of_corruption:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Positive_affect]' derivation='Sum' name='[sum:Positive_affect:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Social_support]' derivation='Sum' name='[sum:Social_support:qk]' pivot='key' type='quantitative' />
      <group caption='combined set top and bottom' delimiter=',' name='[Ensemble 1]' name-style='unqualified'>
        <groupfilter function='union'>
          <groupfilter field='[first top results]' function='reference' />
          <groupfilter field='[first bottom results]' function='reference' />
        </groupfilter>
      </group>
      <group caption='first bottom results' name='[first bottom results]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='AVG([Life_Ladder])' function='order' user:ui-marker='order'>
            <groupfilter expression='AVG([Life_Ladder]) &lt;&gt; 0.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:Country_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='first top results' name='[first top results]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='AVG([Life_Ladder])' function='order' user:ui-marker='order'>
            <groupfilter expression='AVG([Life_Ladder]) &lt;&gt; 0.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:Country_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </groupfilter>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Ensemble 1]' type='palette'>
            <map to='#499894'>
              <bucket>(&quot;Haiti&quot;)</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>(&quot;Afghanistan&quot;)</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>(&quot;Central African Republic&quot;)</bucket>
            </map>
            <map to='#79706e'>
              <bucket>(&quot;Norway&quot;)</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>(&quot;Iceland&quot;)</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>(&quot;Comoros&quot;)</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>(&quot;Yemen&quot;)</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>(&quot;Australia&quot;)</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>(&quot;Tanzania&quot;)</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>(&quot;Denmark&quot;)</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>(&quot;Rwanda&quot;)</bucket>
            </map>
            <map to='#d37295'>
              <bucket>(&quot;Sweden&quot;)</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>(&quot;Togo&quot;)</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>(&quot;Zimbabwe&quot;)</bucket>
            </map>
            <map to='#e15759'>
              <bucket>(&quot;Netherlands&quot;)</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>(&quot;Finland&quot;)</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>(&quot;Burundi&quot;)</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>(&quot;Switzerland&quot;)</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>(&quot;New Zealand&quot;)</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>(&quot;Canada&quot;)</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[sum:Positive_affect:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Generosity:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Generosity:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[pcto:avg:Freedom_to_make_life_choices:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[sum:Social_support:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Perceptions_of_corruption:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Perceptions_of_corruption:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[pcto:avg:Social_support:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[sum:Log_GDP_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Log_GDP_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Log_GDP_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[pcto:avg:Perceptions_of_corruption:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[sum:Healthy_life_expectancy_at_birth:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[sum:F1:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Freedom_to_make_life_choices:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Freedom_to_make_life_choices:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[sum:Freedom_to_make_life_choices:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[sum:Negative_affect:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[sum:Life_Ladder:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Life_Ladder:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[pcto:avg:Life_Ladder:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Social_support:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Social_support:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[pcto:avg:Log_GDP_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[sum:Perceptions_of_corruption:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Healthy_life_expectancy_at_birth:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Healthy_life_expectancy_at_birth:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[pcto:avg:Generosity:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[__tableau_internal_object_id__].[cnt:World_Happiness_Report_Cleaned.csv_5AEA971ECB8B4075BC602C85C399FF2E:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[sum:Generosity:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taiwan Province of China&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Réel&quot;</bucket>
            <bucket>&quot;Estimation&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='World_Happiness_Report_Cleaned.csv' id='World_Happiness_Report_Cleaned.csv_5AEA971ECB8B4075BC602C85C399FF2E'>
            <properties context=''>
              <relation connection='textscan.01v6i7b0leqok114t11u91a2gydg' name='World_Happiness_Report_Cleaned.csv' table='[C:\Users\Rachad\Desktop\Rachad\Ironhack\Project05\World_Happiness_Report_Cleaned#csv]' type='table'>
                <columns character-set='UTF-8' gridOrigin='A1:L1879:no:A1:L1879:1' header='yes' locale='en_US' separator=';'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Country_name' ordinal='1' />
                  <column datatype='integer' name='year' ordinal='2' />
                  <column datatype='real' name='Life_Ladder' ordinal='3' />
                  <column datatype='real' name='Log_GDP_per_capita' ordinal='4' />
                  <column datatype='real' name='Social_support' ordinal='5' />
                  <column datatype='real' name='Healthy_life_expectancy_at_birth' ordinal='6' />
                  <column datatype='real' name='Freedom_to_make_life_choices' ordinal='7' />
                  <column datatype='real' name='Generosity' ordinal='8' />
                  <column datatype='real' name='Perceptions_of_corruption' ordinal='9' />
                  <column datatype='real' name='Positive_affect' ordinal='10' />
                  <column datatype='real' name='Negative_affect' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top or Bottom' datatype='integer' name='[Paramètre 1]' param-domain-type='any' role='measure' type='quantitative' value='10'>
        <calculation class='tableau' formula='10' />
      </column>
    </datasource>
    <datasource caption='World_Happiness_Report_Cleaned (2)' inline='true' name='federated.0dyzype106d9b31ck49fa0y7r6m6 (copie)' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='World_Happiness_Report_Cleaned' name='textscan.01v6i7b0leqok114t11u91a2gydg (copie)'>
            <connection class='textscan' directory='C:/Users/Rachad/Desktop/Rachad/Ironhack/Project05' filename='World_Happiness_Report_Cleaned.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.01v6i7b0leqok114t11u91a2gydg (copie)' name='World_Happiness_Report_Cleaned.csv' table='[World_Happiness_Report_Cleaned#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=';'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country_name' ordinal='1' />
            <column datatype='integer' name='year' ordinal='2' />
            <column datatype='real' name='Life_Ladder' ordinal='3' />
            <column datatype='real' name='Log_GDP_per_capita' ordinal='4' />
            <column datatype='real' name='Social_support' ordinal='5' />
            <column datatype='real' name='Healthy_life_expectancy_at_birth' ordinal='6' />
            <column datatype='real' name='Freedom_to_make_life_choices' ordinal='7' />
            <column datatype='real' name='Generosity' ordinal='8' />
            <column datatype='real' name='Perceptions_of_corruption' ordinal='9' />
            <column datatype='real' name='Positive_affect' ordinal='10' />
            <column datatype='real' name='Negative_affect' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.01v6i7b0leqok114t11u91a2gydg (copie)' name='World_Happiness_Report_Cleaned.csv' table='[World_Happiness_Report_Cleaned#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=';'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Country_name' ordinal='1' />
            <column datatype='integer' name='year' ordinal='2' />
            <column datatype='real' name='Life_Ladder' ordinal='3' />
            <column datatype='real' name='Log_GDP_per_capita' ordinal='4' />
            <column datatype='real' name='Social_support' ordinal='5' />
            <column datatype='real' name='Healthy_life_expectancy_at_birth' ordinal='6' />
            <column datatype='real' name='Freedom_to_make_life_choices' ordinal='7' />
            <column datatype='real' name='Generosity' ordinal='8' />
            <column datatype='real' name='Perceptions_of_corruption' ordinal='9' />
            <column datatype='real' name='Positive_affect' ordinal='10' />
            <column datatype='real' name='Negative_affect' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[World_Happiness_Report_Cleaned.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned.csv_5AEA971ECB8B4075BC602C85C399FF2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country_name]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned.csv]</parent-name>
            <remote-alias>Country_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned.csv_5AEA971ECB8B4075BC602C85C399FF2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned.csv_5AEA971ECB8B4075BC602C85C399FF2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life_Ladder</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Life_Ladder]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned.csv]</parent-name>
            <remote-alias>Life_Ladder</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned.csv_5AEA971ECB8B4075BC602C85C399FF2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Log_GDP_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Log_GDP_per_capita]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned.csv]</parent-name>
            <remote-alias>Log_GDP_per_capita</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned.csv_5AEA971ECB8B4075BC602C85C399FF2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Social_support</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Social_support]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned.csv]</parent-name>
            <remote-alias>Social_support</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned.csv_5AEA971ECB8B4075BC602C85C399FF2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Healthy_life_expectancy_at_birth</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Healthy_life_expectancy_at_birth]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned.csv]</parent-name>
            <remote-alias>Healthy_life_expectancy_at_birth</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned.csv_5AEA971ECB8B4075BC602C85C399FF2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Freedom_to_make_life_choices</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Freedom_to_make_life_choices]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned.csv]</parent-name>
            <remote-alias>Freedom_to_make_life_choices</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned.csv_5AEA971ECB8B4075BC602C85C399FF2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Generosity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Generosity]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned.csv]</parent-name>
            <remote-alias>Generosity</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned.csv_5AEA971ECB8B4075BC602C85C399FF2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Perceptions_of_corruption</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Perceptions_of_corruption]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned.csv]</parent-name>
            <remote-alias>Perceptions_of_corruption</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned.csv_5AEA971ECB8B4075BC602C85C399FF2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Positive_affect</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Positive_affect]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned.csv]</parent-name>
            <remote-alias>Positive_affect</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned.csv_5AEA971ECB8B4075BC602C85C399FF2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Negative_affect</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Negative_affect]</local-name>
            <parent-name>[World_Happiness_Report_Cleaned.csv]</parent-name>
            <remote-alias>Negative_affect</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[World_Happiness_Report_Cleaned.csv_5AEA971ECB8B4075BC602C85C399FF2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Country name' datatype='string' name='[Country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Freedom to make life choices' datatype='real' name='[Freedom_to_make_life_choices]' role='measure' type='quantitative' />
      <column caption='Healthy life expectancy at birth' datatype='real' name='[Healthy_life_expectancy_at_birth]' role='measure' type='quantitative' />
      <column caption='Life Ladder' datatype='real' name='[Life_Ladder]' role='measure' type='quantitative' />
      <column caption='Log GDP per capita' datatype='real' name='[Log_GDP_per_capita]' role='measure' type='quantitative' />
      <column caption='Negative affect' datatype='real' name='[Negative_affect]' role='measure' type='quantitative' />
      <column caption='Perceptions of corruption' datatype='real' name='[Perceptions_of_corruption]' role='measure' type='quantitative' />
      <column caption='Positive affect' datatype='real' name='[Positive_affect]' role='measure' type='quantitative' />
      <column caption='Social support' datatype='real' name='[Social_support]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='World_Happiness_Report_Cleaned.csv' datatype='table' name='[__tableau_internal_object_id__].[World_Happiness_Report_Cleaned.csv_5AEA971ECB8B4075BC602C85C399FF2E]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[Country_name]' derivation='None' name='[none:Country_name:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hong Kong S.A.R. of China&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Cyprus&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Taiwan Province of China&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Somaliland region&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Palestinian Territories&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='World_Happiness_Report_Cleaned.csv' id='World_Happiness_Report_Cleaned.csv_5AEA971ECB8B4075BC602C85C399FF2E'>
            <properties context=''>
              <relation connection='textscan.01v6i7b0leqok114t11u91a2gydg (copie)' name='World_Happiness_Report_Cleaned.csv' table='[World_Happiness_Report_Cleaned#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=';'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Country_name' ordinal='1' />
                  <column datatype='integer' name='year' ordinal='2' />
                  <column datatype='real' name='Life_Ladder' ordinal='3' />
                  <column datatype='real' name='Log_GDP_per_capita' ordinal='4' />
                  <column datatype='real' name='Social_support' ordinal='5' />
                  <column datatype='real' name='Healthy_life_expectancy_at_birth' ordinal='6' />
                  <column datatype='real' name='Freedom_to_make_life_choices' ordinal='7' />
                  <column datatype='real' name='Generosity' ordinal='8' />
                  <column datatype='real' name='Perceptions_of_corruption' ordinal='9' />
                  <column datatype='real' name='Positive_affect' ordinal='10' />
                  <column datatype='real' name='Negative_affect' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Boxplot'>
      <table>
        <view>
          <datasources>
            <datasource caption='World_Happiness_Report_Cleaned' name='federated.0dyzype106d9b31ck49fa0y7r6m6' />
          </datasources>
          <datasource-dependencies datasource='federated.0dyzype106d9b31ck49fa0y7r6m6'>
            <column caption='Country name' datatype='string' name='[Country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Life Ladder' datatype='real' name='[Life_Ladder]' role='measure' type='quantitative' />
            <column-instance column='[Country_name]' derivation='None' name='[none:Country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life_Ladder]' derivation='Sum' name='[sum:Life_Ladder:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0dyzype106d9b31ck49fa0y7r6m6].[none:year:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0dyzype106d9b31ck49fa0y7r6m6].[sum:Life_Ladder:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0dyzype106d9b31ck49fa0y7r6m6].[sum:Life_Ladder:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dyzype106d9b31ck49fa0y7r6m6].[sum:Life_Ladder:qk]</rows>
        <cols>[federated.0dyzype106d9b31ck49fa0y7r6m6].[none:Country_name:nk]</cols>
      </table>
      <simple-id uuid='{7F4EDE9F-C369-4D76-9169-987E7EE549BD}' />
    </worksheet>
    <worksheet name='Could money buy hapiness'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#c16100' fontname='Comic Sans MS' fontsize='12'>Could money buy happiness ?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World_Happiness_Report_Cleaned' name='federated.0dyzype106d9b31ck49fa0y7r6m6' />
          </datasources>
          <datasource-dependencies datasource='federated.0dyzype106d9b31ck49fa0y7r6m6'>
            <column caption='Country name' datatype='string' name='[Country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Life Ladder' datatype='real' name='[Life_Ladder]' role='measure' type='quantitative' />
            <column caption='Log GDP per capita' datatype='real' name='[Log_GDP_per_capita]' role='measure' type='quantitative' />
            <column-instance column='[Life_Ladder]' derivation='Avg' name='[avg:Life_Ladder:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Log_GDP_per_capita]' derivation='Avg' name='[avg:Log_GDP_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country_name]' derivation='None' name='[none:Country_name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Log_GDP_per_capita:qk]' field-type='quantitative' max='12.0' min='6.0' minor-origin='0.0' minor-spacing='1.0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' scope='rows' value='Life Ladder' />
            <format attr='title' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Log_GDP_per_capita:qk]' scope='cols' value=' Log GDP per capita' />
            <format attr='auto-subtitle' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Log_GDP_per_capita:qk]' scope='cols' value='false' />
            <format attr='subtitle' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Log_GDP_per_capita:qk]' scope='cols' value='Average' />
            <format attr='auto-subtitle' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' scope='rows' value='false' />
            <format attr='subtitle' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' scope='rows' value='Average' />
            <encoding attr='space' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' field-type='quantitative' max='8.2686316043038914' min='3.0' range-type='fixed' scope='rows' type='space' />
            <format attr='height' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Log_GDP_per_capita:qk]' value='39' />
            <format attr='width' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' value='48' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Log_GDP_per_capita:qk]' value='e0e+00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' value='Comic Sans MS' />
            <format attr='font-family' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Log_GDP_per_capita:qk]' value='Comic Sans MS' />
            <format attr='font-size' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' value='7' />
            <format attr='font-size' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Log_GDP_per_capita:qk]' value='7' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' palette='red_green_diverging_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Log_GDP_per_capita:qk]' palette='green_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Log_GDP_per_capita:qk]' />
              <size column='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' />
              <lod column='[federated.0dyzype106d9b31ck49fa0y7r6m6].[none:Country_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.42779004573822021' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='234' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]</rows>
        <cols>[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Log_GDP_per_capita:qk]</cols>
      </table>
      <simple-id uuid='{28F6759A-D2D1-4E19-8553-08F8BEB25028}' />
    </worksheet>
    <worksheet name='How happiness looks on a world map ?'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#c16100' fontname='Comic Sans MS' fontsize='12'>&lt;</run>
            <run bold='true' fontalignment='1' fontcolor='#c16100' fontname='Comic Sans MS' fontsize='12'>Sheet Name</run>
            <run bold='true' fontalignment='1' fontcolor='#c16100' fontname='Comic Sans MS' fontsize='12'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World_Happiness_Report_Cleaned' name='federated.0dyzype106d9b31ck49fa0y7r6m6' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0dyzype106d9b31ck49fa0y7r6m6'>
            <column caption='Country name' datatype='string' name='[Country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Life Ladder' datatype='real' name='[Life_Ladder]' role='measure' type='quantitative' />
            <column-instance column='[Life_Ladder]' derivation='Avg' name='[avg:Life_Ladder:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country_name]' derivation='None' name='[none:Country_name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[Longitude (generated)]' field-type='quantitative' max='22944977.523712546' min='-15563858.342685562' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[Latitude (generated)]' field-type='quantitative' max='14304014.454672575' min='-10146573.412516043' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[none:Country_name:nk]' value='Comic Sans MS' />
            <format attr='font-family' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' value='Comic Sans MS' />
            <format attr='font-family' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[Geometry (generated)]' value='Comic Sans MS' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' palette='green_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-family' value='Verdana' />
            <format attr='background-color' value='#ffffff' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' value='Life Ladder moy.'>
              <formatted-text>
                <run fontname='Comic Sans MS'>Life Ladder moy.</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0dyzype106d9b31ck49fa0y7r6m6].[none:Country_name:nk]' />
              <lod column='[federated.0dyzype106d9b31ck49fa0y7r6m6].[none:Country_name:nk]' />
              <color column='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' />
              <geometry column='[federated.0dyzype106d9b31ck49fa0y7r6m6].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-weight' value='normal' />
                <format attr='font-size' value='2' />
                <format attr='color' value='#e6e6e6' />
                <format attr='font-family' value='Comic Sans MS' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dyzype106d9b31ck49fa0y7r6m6].[Latitude (generated)]</rows>
        <cols>[federated.0dyzype106d9b31ck49fa0y7r6m6].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{201E9E1A-6D17-4C72-A7A0-0263B71878BC}' />
    </worksheet>
    <worksheet name='How some metrics correlate with the life ladder ?'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#c16100' fontname='Comic Sans MS' fontsize='12'>What is the relation between happiness and other factors ?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World_Happiness_Report_Cleaned' name='federated.0dyzype106d9b31ck49fa0y7r6m6' />
          </datasources>
          <datasource-dependencies datasource='federated.0dyzype106d9b31ck49fa0y7r6m6'>
            <column caption='Country name' datatype='string' name='[Country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Freedom to make life choices' datatype='real' name='[Freedom_to_make_life_choices]' role='measure' type='quantitative' />
            <column datatype='real' name='[Generosity]' role='measure' type='quantitative' />
            <column caption='Life Ladder' datatype='real' name='[Life_Ladder]' role='measure' type='quantitative' />
            <column caption='Perceptions of corruption' datatype='real' name='[Perceptions_of_corruption]' role='measure' type='quantitative' />
            <column caption='Social support' datatype='real' name='[Social_support]' role='measure' type='quantitative' />
            <column-instance column='[Freedom_to_make_life_choices]' derivation='Avg' name='[avg:Freedom_to_make_life_choices:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Generosity]' derivation='Avg' name='[avg:Generosity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life_Ladder]' derivation='Avg' name='[avg:Life_Ladder:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Perceptions_of_corruption]' derivation='Avg' name='[avg:Perceptions_of_corruption:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Social_support]' derivation='Avg' name='[avg:Social_support:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country_name]' derivation='None' name='[none:Country_name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dyzype106d9b31ck49fa0y7r6m6].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Freedom_to_make_life_choices:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Generosity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Perceptions_of_corruption:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Social_support:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0dyzype106d9b31ck49fa0y7r6m6].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' scope='rows' value='Life Ladder' />
            <format attr='auto-subtitle' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' scope='rows' value='false' />
            <format attr='subtitle' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' scope='rows' value='Average' />
            <format attr='title' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[Multiple Values]' scope='cols' value='Value of mesure' />
            <format attr='auto-subtitle' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[Multiple Values]' scope='cols' value='false' />
            <format attr='subtitle' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[Multiple Values]' scope='cols' value='4 metrics' />
            <format attr='width' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' value='56' />
            <format attr='stroke-size' scope='rows' value='3' />
            <format attr='tick-color' scope='rows' value='#1b1b1b' />
            <format attr='stroke-size' scope='cols' value='3' />
            <format attr='height' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[Multiple Values]' value='53' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' value='Comic Sans MS' />
            <format attr='font-family' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[Multiple Values]' value='Comic Sans MS' />
            <format attr='font-size' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[Multiple Values]' value='7' />
            <format attr='font-size' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' value='7' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' palette='orange_blue_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='0' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='3' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0dyzype106d9b31ck49fa0y7r6m6].[:Measure Names]' />
              <size column='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' />
              <lod column='[federated.0dyzype106d9b31ck49fa0y7r6m6].[none:Country_name:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-family' value='Comic Sans MS' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='0.38381215929985046' />
                <format attr='mark-transparency' value='183' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]</rows>
        <cols>[federated.0dyzype106d9b31ck49fa0y7r6m6].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{154BBC2C-6087-447E-A37B-75255697F8D0}' />
    </worksheet>
    <worksheet name='How the different metrics change during the years'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#c16100' fontname='Comic Sans MS' fontsize='12'>How the different metrics change during the years ? Differential average </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World_Happiness_Report_Cleaned' name='federated.0dyzype106d9b31ck49fa0y7r6m6' />
          </datasources>
          <datasource-dependencies datasource='federated.0dyzype106d9b31ck49fa0y7r6m6'>
            <column caption='Freedom to make life choices' datatype='real' name='[Freedom_to_make_life_choices]' role='measure' type='quantitative' />
            <column datatype='real' name='[Generosity]' role='measure' type='quantitative' />
            <column caption='Healthy life expectancy at birth' datatype='real' name='[Healthy_life_expectancy_at_birth]' role='measure' type='quantitative' />
            <column caption='Life Ladder' datatype='real' name='[Life_Ladder]' role='measure' type='quantitative' />
            <column caption='Log GDP per capita' datatype='real' name='[Log_GDP_per_capita]' role='measure' type='quantitative' />
            <column caption='Perceptions of corruption' datatype='real' name='[Perceptions_of_corruption]' role='measure' type='quantitative' />
            <column caption='Social support' datatype='real' name='[Social_support]' role='measure' type='quantitative' />
            <column-instance column='[Freedom_to_make_life_choices]' derivation='Avg' name='[diff:avg:Freedom_to_make_life_choices:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Generosity]' derivation='Avg' name='[diff:avg:Generosity:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Healthy_life_expectancy_at_birth]' derivation='Avg' name='[diff:avg:Healthy_life_expectancy_at_birth:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Life_Ladder]' derivation='Avg' name='[diff:avg:Life_Ladder:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Log_GDP_per_capita]' derivation='Avg' name='[diff:avg:Log_GDP_per_capita:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Perceptions_of_corruption]' derivation='Avg' name='[diff:avg:Perceptions_of_corruption:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Social_support]' derivation='Avg' name='[diff:avg:Social_support:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='auto-subtitle' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Life_Ladder:qk]' scope='rows' value='false' />
            <encoding attr='space' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Life_Ladder:qk]' field-type='quantitative' major-show='false' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Healthy_life_expectancy_at_birth:qk]' field-type='quantitative' major-origin='0.0' major-show='false' major-spacing='10.0' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Log_GDP_per_capita:qk]' field-type='quantitative' major-origin='0.0' major-show='false' major-spacing='10.0' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Perceptions_of_corruption:qk]' field-type='quantitative' major-origin='0.0' major-show='false' major-spacing='0.10000000000000001' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Social_support:qk]' field-type='quantitative' major-origin='0.0' major-show='false' major-spacing='0.10000000000000001' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Generosity:qk]' field-type='quantitative' major-origin='0.0' major-show='false' major-spacing='0.01' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Life_Ladder:qk]' scope='rows' value='life ladder' />
            <format attr='subtitle' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Life_Ladder:qk]' scope='rows' value='happiness index' />
            <format attr='title' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Healthy_life_expectancy_at_birth:qk]' scope='rows' value='Healthy life expectancy at birth' />
            <format attr='title' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Log_GDP_per_capita:qk]' scope='rows' value='Log GDP per capita' />
            <format attr='title' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Social_support:qk]' scope='rows' value='Social support' />
            <format attr='title' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Perceptions_of_corruption:qk]' scope='rows' value='Perceptions of corruption' />
            <format attr='auto-subtitle' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Perceptions_of_corruption:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Generosity:qk]' scope='rows' value='Generosity' />
            <format attr='title' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Freedom_to_make_life_choices:qk]' scope='rows' value='Freedom to make life choices' />
            <format attr='width' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Life_Ladder:qk]' value='68' />
            <format attr='width' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Healthy_life_expectancy_at_birth:qk]' value='68' />
            <format attr='width' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Log_GDP_per_capita:qk]' value='68' />
            <format attr='width' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Freedom_to_make_life_choices:qk]' value='68' />
            <format attr='width' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Social_support:qk]' value='68' />
            <format attr='width' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Perceptions_of_corruption:qk]' value='68' />
            <format attr='width' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Generosity:qk]' value='68' />
            <encoding attr='space' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Freedom_to_make_life_choices:qk]' field-type='quantitative' major-origin='0.0' major-show='false' major-spacing='0.10000000000000001' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[none:year:qk]' field-type='quantitative' minor-origin='0' minor-show='false' minor-spacing='1.0' scope='cols' type='space' />
            <format attr='height' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[none:year:qk]' value='34' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-family' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[:Measure Names]' value='Comic Sans MS' />
            <format attr='font-size' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[:Measure Names]' value='8' />
            <format attr='font-family' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Generosity:qk]' value='Comic Sans MS' />
            <format attr='font-size' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Generosity:qk]' value='8' />
            <format attr='text-align' data-class='subtotal' scope='rows' value='center' />
            <format attr='vertical-align' data-class='subtotal' scope='rows' value='center' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[:Measure Names]' value='Comic Sans MS' />
            <format attr='font-size' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[:Measure Names]' value='7' />
            <format attr='text-align' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[:Measure Names]' value='center' />
            <format attr='font-family' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Freedom_to_make_life_choices:qk]' value='Comic Sans MS' />
            <format attr='font-family' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Generosity:qk]' value='Comic Sans MS' />
            <format attr='text-align' scope='rows' value='center' />
            <format attr='vertical-align' scope='rows' value='center' />
            <format attr='font-family' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Healthy_life_expectancy_at_birth:qk]' value='Comic Sans MS' />
            <format attr='font-family' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Life_Ladder:qk]' value='Comic Sans MS' />
            <format attr='font-family' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Log_GDP_per_capita:qk]' value='Comic Sans MS' />
            <format attr='font-family' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Perceptions_of_corruption:qk]' value='Comic Sans MS' />
            <format attr='font-family' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Social_support:qk]' value='Comic Sans MS' />
            <format attr='font-family' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[none:year:qk]' value='Comic Sans MS' />
            <format attr='font-size' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Life_Ladder:qk]' value='7' />
            <format attr='font-size' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Healthy_life_expectancy_at_birth:qk]' value='7' />
            <format attr='font-size' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Log_GDP_per_capita:qk]' value='7' />
            <format attr='font-size' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Social_support:qk]' value='7' />
            <format attr='font-size' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Freedom_to_make_life_choices:qk]' value='7' />
            <format attr='font-size' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Perceptions_of_corruption:qk]' value='7' />
            <format attr='font-size' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Generosity:qk]' value='7' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0dyzype106d9b31ck49fa0y7r6m6].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[none:year:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Life Ladder moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run fontname='Verdana'>&lt;Life Ladder&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Healthy life expectancy at birth moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Healthy_life_expectancy_at_birth:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Log GDP per capita moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Log_GDP_per_capita:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Social support moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Social_support:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Perceptions of corruption moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Perceptions_of_corruption:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Generosity moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Generosity:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='991' />
                <format attr='maxwidth' value='991' />
                <format attr='minheight' value='100' />
                <format attr='maxheight' value='100' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-disallow' y-axis-name='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Generosity:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0dyzype106d9b31ck49fa0y7r6m6].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[none:year:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Life Ladder moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run fontname='Verdana'>&lt;Life Ladder&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Healthy life expectancy at birth moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Healthy_life_expectancy_at_birth:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Log GDP per capita moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Log_GDP_per_capita:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Social support moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Social_support:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Perceptions of corruption moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Perceptions_of_corruption:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Generosity moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Generosity:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-disallow' y-axis-name='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Healthy_life_expectancy_at_birth:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0dyzype106d9b31ck49fa0y7r6m6].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[none:year:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Life Ladder moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run fontname='Verdana'>&lt;Life Ladder&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Healthy life expectancy at birth moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Healthy_life_expectancy_at_birth:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Log GDP per capita moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Log_GDP_per_capita:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Social support moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Social_support:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Perceptions of corruption moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Perceptions_of_corruption:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Generosity moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Generosity:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-disallow' y-axis-name='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Life_Ladder:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0dyzype106d9b31ck49fa0y7r6m6].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[none:year:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Life Ladder moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run fontname='Verdana'>&lt;Life Ladder&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Healthy life expectancy at birth moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Healthy_life_expectancy_at_birth:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Log GDP per capita moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Log_GDP_per_capita:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Social support moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Social_support:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Perceptions of corruption moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Perceptions_of_corruption:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Generosity moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Generosity:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
                <format attr='text-orientation' value='0' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-family' value='Verdana' />
                <format attr='font-size' value='7' />
                <format attr='color' value='#000000' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-disallow' y-axis-name='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Log_GDP_per_capita:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0dyzype106d9b31ck49fa0y7r6m6].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[none:year:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Life Ladder moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run fontname='Verdana'>&lt;Life Ladder&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Healthy life expectancy at birth moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Healthy_life_expectancy_at_birth:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Log GDP per capita moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Log_GDP_per_capita:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Social support moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Social_support:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Perceptions of corruption moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Perceptions_of_corruption:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Generosity moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Generosity:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-disallow' y-axis-name='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Perceptions_of_corruption:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0dyzype106d9b31ck49fa0y7r6m6].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[none:year:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Life Ladder moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run fontname='Verdana'>&lt;Life Ladder&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Healthy life expectancy at birth moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Healthy_life_expectancy_at_birth:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Log GDP per capita moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Log_GDP_per_capita:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Social support moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Social_support:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Perceptions of corruption moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Perceptions_of_corruption:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Generosity moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Generosity:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-disallow' y-axis-name='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Social_support:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0dyzype106d9b31ck49fa0y7r6m6].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[none:year:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Life Ladder moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run fontname='Verdana'>&lt;Life Ladder&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Healthy life expectancy at birth moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Healthy_life_expectancy_at_birth:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Log GDP per capita moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Log_GDP_per_capita:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Social support moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Social_support:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Perceptions of corruption moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Perceptions_of_corruption:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Generosity moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Generosity:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-disallow' y-axis-name='[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Freedom_to_make_life_choices:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0dyzype106d9b31ck49fa0y7r6m6].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Year:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[none:year:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Life Ladder moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run fontname='Verdana'>&lt;Life Ladder&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Healthy life expectancy at birth moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Healthy_life_expectancy_at_birth:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Log GDP per capita moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Log_GDP_per_capita:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Social support moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Social_support:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Perceptions of corruption moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Perceptions_of_corruption:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Différence en termes de Generosity moy. du/de la Précédent dans le/la Table (horizontale):	</run>
                <run bold='true'><![CDATA[<[federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Generosity:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Life_Ladder:qk] + ([federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Healthy_life_expectancy_at_birth:qk] + ([federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Log_GDP_per_capita:qk] + ([federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Social_support:qk] + ([federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Freedom_to_make_life_choices:qk] + ([federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Perceptions_of_corruption:qk] + [federated.0dyzype106d9b31ck49fa0y7r6m6].[diff:avg:Generosity:qk]))))))</rows>
        <cols>[federated.0dyzype106d9b31ck49fa0y7r6m6].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{A553D872-9CE4-47B0-A6D0-BEBF0AE4BA63}' />
    </worksheet>
    <worksheet name='Impact of Covid-19'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='2' fontcolor='#c16100' fontname='Comic Sans MS' fontsize='12'>Did COVID-19 affect happiness ? Let&apos;s test the sample!</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World_Happiness_Report_Cleaned (2)' name='federated.0dyzype106d9b31ck49fa0y7r6m6 (copie)' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0dyzype106d9b31ck49fa0y7r6m6 (copie)'>
            <column caption='Country name' datatype='string' name='[Country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Life Ladder' datatype='real' name='[Life_Ladder]' role='measure' type='quantitative' />
            <column-instance column='[Life_Ladder]' derivation='Avg' name='[avg:Life_Ladder:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country_name]' derivation='None' name='[none:Country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dyzype106d9b31ck49fa0y7r6m6 (copie)].[none:Country_name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Czech Republic&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Iran&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Jordan&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Lebanon&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Saudi Arabia&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Venezuela&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0dyzype106d9b31ck49fa0y7r6m6 (copie)].[none:year:qk]' included-values='in-range'>
            <min>2019</min>
            <max>2020</max>
          </filter>
          <slices>
            <column>[federated.0dyzype106d9b31ck49fa0y7r6m6 (copie)].[none:Country_name:nk]</column>
            <column>[federated.0dyzype106d9b31ck49fa0y7r6m6 (copie)].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6 (copie)].[none:year:qk]' field-type='quantitative' major-origin='0' major-spacing='1.0' max='2020' min='2019' range-type='fixed' scope='cols' type='space' />
            <format attr='height' field='[federated.0dyzype106d9b31ck49fa0y7r6m6 (copie)].[none:year:qk]' value='26' />
            <format attr='title' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6 (copie)].[avg:Life_Ladder:qk]' scope='rows' value='Life Ladder' />
            <format attr='auto-subtitle' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6 (copie)].[avg:Life_Ladder:qk]' scope='rows' value='false' />
            <format attr='subtitle' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6 (copie)].[avg:Life_Ladder:qk]' scope='rows' value='Average' />
            <format attr='width' field='[federated.0dyzype106d9b31ck49fa0y7r6m6 (copie)].[avg:Life_Ladder:qk]' value='60' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-family' field='[federated.0dyzype106d9b31ck49fa0y7r6m6 (copie)].[avg:Life_Ladder:qk]' value='Comic Sans MS' />
            <format attr='font-family' field='[federated.0dyzype106d9b31ck49fa0y7r6m6 (copie)].[none:year:qk]' value='Comic Sans MS' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.0dyzype106d9b31ck49fa0y7r6m6 (copie)].[avg:Life_Ladder:qk]' value='Comic Sans MS' />
            <format attr='font-family' field='[federated.0dyzype106d9b31ck49fa0y7r6m6 (copie)].[none:year:qk]' value='Comic Sans MS' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0dyzype106d9b31ck49fa0y7r6m6 (copie)].[none:Country_name:nk]' />
              <text column='[federated.0dyzype106d9b31ck49fa0y7r6m6 (copie)].[none:Country_name:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-family' value='Comic Sans MS' />
                <format attr='font-size' value='3' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dyzype106d9b31ck49fa0y7r6m6 (copie)].[avg:Life_Ladder:qk]</rows>
        <cols>[federated.0dyzype106d9b31ck49fa0y7r6m6 (copie)].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{8F4B26A2-7172-43EE-903D-E3752E978AC1}' />
    </worksheet>
    <worksheet name='KPIs'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#c16100' fontname='Comic Sans MS' fontsize='12'>KPIs (average calculation) and descriptions</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World_Happiness_Report_Cleaned' name='federated.0dyzype106d9b31ck49fa0y7r6m6' />
          </datasources>
          <datasource-dependencies datasource='federated.0dyzype106d9b31ck49fa0y7r6m6'>
            <column caption='Freedom to make life choices' datatype='real' name='[Freedom_to_make_life_choices]' role='measure' type='quantitative' />
            <column caption='Healthy life expectancy at birth' datatype='real' name='[Healthy_life_expectancy_at_birth]' role='measure' type='quantitative' />
            <column caption='Life Ladder' datatype='real' name='[Life_Ladder]' role='measure' type='quantitative' />
            <column caption='Log GDP per capita' datatype='real' name='[Log_GDP_per_capita]' role='measure' type='quantitative' />
            <column caption='Perceptions of corruption' datatype='real' name='[Perceptions_of_corruption]' role='measure' type='quantitative' />
            <column caption='Social support' datatype='real' name='[Social_support]' role='measure' type='quantitative' />
            <column-instance column='[Freedom_to_make_life_choices]' derivation='Avg' name='[avg:Freedom_to_make_life_choices:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Healthy_life_expectancy_at_birth]' derivation='Avg' name='[avg:Healthy_life_expectancy_at_birth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life_Ladder]' derivation='Avg' name='[avg:Life_Ladder:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Log_GDP_per_capita]' derivation='Avg' name='[avg:Log_GDP_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Perceptions_of_corruption]' derivation='Avg' name='[avg:Perceptions_of_corruption:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Social_support]' derivation='Avg' name='[avg:Social_support:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Healthy_life_expectancy_at_birth]' derivation='Sum' name='[sum:Healthy_life_expectancy_at_birth:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dyzype106d9b31ck49fa0y7r6m6].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Log_GDP_per_capita:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Perceptions_of_corruption:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Social_support:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Healthy_life_expectancy_at_birth:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Freedom_to_make_life_choices:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0dyzype106d9b31ck49fa0y7r6m6].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]&quot;</bucket>
              <bucket>&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Log_GDP_per_capita:qk]&quot;</bucket>
              <bucket>&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Perceptions_of_corruption:qk]&quot;</bucket>
              <bucket>&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Social_support:qk]&quot;</bucket>
              <bucket>&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[sum:Healthy_life_expectancy_at_birth:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0dyzype106d9b31ck49fa0y7r6m6].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[:Measure Names]' value='330' />
            <format attr='font-size' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[:Measure Names]' value='10' />
            <format attr='font-family' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[:Measure Names]' value='Comic Sans MS' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[:Measure Names]' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[:Measure Names]' value='bold' />
            <format attr='vertical-align' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[:Measure Names]' value='center' />
            <format attr='text-align' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[:Measure Names]' value='center' />
            <format attr='font-size' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[:Measure Names]' value='9' />
            <format attr='font-family' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[:Measure Names]' value='Comic Sans MS' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-family' value='Comic Sans MS' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#1b1b1b6d' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0dyzype106d9b31ck49fa0y7r6m6].[Multiple Values]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0dyzype106d9b31ck49fa0y7r6m6].[Multiple Values]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0dyzype106d9b31ck49fa0y7r6m6].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{36F2E778-2413-4816-A541-CD5BBC2CAF65}' />
    </worksheet>
    <worksheet name='Selecting sample for study'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#c16100' fontname='Comic Sans MS' fontsize='12'><![CDATA[Selecting a sample of countries  - <Page Name>]]></run>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='true' fontalignment='1' fontcolor='#c16100' fontname='Comic Sans MS' fontsize='12'>color = country, size = perception of corruption</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World_Happiness_Report_Cleaned' name='federated.0dyzype106d9b31ck49fa0y7r6m6' />
          </datasources>
          <datasource-dependencies datasource='federated.0dyzype106d9b31ck49fa0y7r6m6'>
            <column caption='Country name' datatype='string' name='[Country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Life Ladder' datatype='real' name='[Life_Ladder]' role='measure' type='quantitative' />
            <column caption='Perceptions of corruption' datatype='real' name='[Perceptions_of_corruption]' role='measure' type='quantitative' />
            <column-instance column='[Life_Ladder]' derivation='Avg' name='[avg:Life_Ladder:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Perceptions_of_corruption]' derivation='Avg' name='[avg:Perceptions_of_corruption:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country_name]' derivation='None' name='[none:Country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dyzype106d9b31ck49fa0y7r6m6].[none:Country_name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Czech Republic&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Iran&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Jordan&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Lebanon&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Saudi Arabia&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Country_name:nk]' member='&quot;Venezuela&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0dyzype106d9b31ck49fa0y7r6m6].[none:year:qk]' included-values='in-range'>
            <min>2005</min>
            <max>2020</max>
          </filter>
          <slices>
            <column>[federated.0dyzype106d9b31ck49fa0y7r6m6].[none:year:qk]</column>
            <column>[federated.0dyzype106d9b31ck49fa0y7r6m6].[none:Country_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Perceptions_of_corruption:qk]' value='60' />
            <format attr='height' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[none:Country_name:nk]' value='92' />
            <format attr='title' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' scope='rows' value='Life Ladder' />
            <format attr='auto-subtitle' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' scope='rows' value='false' />
            <format attr='subtitle' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' scope='rows' value='Average' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-family' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[none:year:qk]' value='Comic Sans MS' />
            <format attr='font-size' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[none:year:qk]' value='8' />
            <format attr='font-family' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' value='Comic Sans MS' />
            <format attr='font-size' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' value='8' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Comic Sans MS' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Perceptions_of_corruption:qk]' value='Comic Sans MS' />
            <format attr='font-size' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Perceptions_of_corruption:qk]' value='8' />
            <format attr='font-family' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[none:Country_name:nk]' value='Comic Sans MS' />
            <format attr='font-size' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[none:Country_name:nk]' value='8' />
            <format attr='color' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[none:Country_name:nk]' value='#1b1b1b' />
            <format attr='font-family' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[none:year:ok]' value='Comic Sans MS' />
            <format attr='font-size' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[none:year:ok]' value='8' />
            <format attr='font-family' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' value='Comic Sans MS' />
            <format attr='font-size' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' value='8' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0dyzype106d9b31ck49fa0y7r6m6].[none:Country_name:nk]' />
              <size column='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Perceptions_of_corruption:qk]' />
              <text column='[federated.0dyzype106d9b31ck49fa0y7r6m6].[none:Country_name:nk]' />
              <text column='[federated.0dyzype106d9b31ck49fa0y7r6m6].[none:year:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-family' value='Comic Sans MS' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.7471270561218262' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='211' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]</rows>
        <cols>[federated.0dyzype106d9b31ck49fa0y7r6m6].[none:Country_name:nk]</cols>
        <pages>
          <column>[federated.0dyzype106d9b31ck49fa0y7r6m6].[none:year:ok]</column>
        </pages>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{51218E4C-F9AF-4E60-8961-0A681A9ABE4F}' />
    </worksheet>
    <worksheet name='The top 10 happiest countries in the world'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#c16100' fontname='Comic Sans MS' fontsize='12'>Top/Bottom 10 countries in happiness !</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World_Happiness_Report_Cleaned' name='federated.0dyzype106d9b31ck49fa0y7r6m6' />
          </datasources>
          <datasource-dependencies datasource='federated.0dyzype106d9b31ck49fa0y7r6m6'>
            <column caption='Country name' datatype='string' name='[Country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Life Ladder' datatype='real' name='[Life_Ladder]' role='measure' type='quantitative' />
            <column-instance column='[Life_Ladder]' derivation='Avg' name='[avg:Life_Ladder:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country_name]' derivation='None' name='[none:Country_name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dyzype106d9b31ck49fa0y7r6m6].[Ensemble 1]' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dyzype106d9b31ck49fa0y7r6m6].[Ensemble 1]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dyzype106d9b31ck49fa0y7r6m6].[Ensemble 1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' scope='cols' value='Life Ladder' />
            <format attr='auto-subtitle' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' scope='cols' value='false' />
            <format attr='subtitle' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' scope='cols' value='Average' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Verdana' />
            <format attr='font-size' value='6' />
            <format attr='font-style' value='italic' />
            <format attr='text-decoration' value='underline' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[Ensemble 1]' value='8' />
            <format attr='color' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[Ensemble 1]' value='#333333' />
            <format attr='font-family' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[Ensemble 1]' value='Comic Sans MS' />
            <format attr='font-family' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' value='Comic Sans MS' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' palette='green_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dyzype106d9b31ck49fa0y7r6m6].[Ensemble 1]</rows>
        <cols>[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]</cols>
      </table>
      <simple-id uuid='{716CA26A-87C9-4F36-81BD-94DBDCE0E310}' />
    </worksheet>
    <worksheet name='The top 10 happiest countries in the world (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#c16100' fontname='Comic Sans MS' fontsize='12'>Top/Bottom 10 countries in happiness : years distribution</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World_Happiness_Report_Cleaned' name='federated.0dyzype106d9b31ck49fa0y7r6m6' />
          </datasources>
          <datasource-dependencies datasource='federated.0dyzype106d9b31ck49fa0y7r6m6'>
            <column caption='Country name' datatype='string' name='[Country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Life Ladder' datatype='real' name='[Life_Ladder]' role='measure' type='quantitative' />
            <column-instance column='[Life_Ladder]' derivation='Avg' name='[avg:Life_Ladder:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ensemble 1]' derivation='InOut' name='[io:Ensemble 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country_name]' derivation='None' name='[none:Country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dyzype106d9b31ck49fa0y7r6m6].[Ensemble 1]' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0dyzype106d9b31ck49fa0y7r6m6].[Ensemble 1]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0dyzype106d9b31ck49fa0y7r6m6].[Ensemble 1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' field-type='quantitative' max='8.4295116057233699' min='2.0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' scope='cols' value='Life Ladder' />
            <format attr='auto-subtitle' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' scope='cols' value='false' />
            <format attr='subtitle' class='0' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' scope='cols' value='Average' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[Ensemble 1]' value='104' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Verdana' />
            <format attr='font-size' value='6' />
            <format attr='font-style' value='italic' />
            <format attr='text-decoration' value='underline' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[Ensemble 1]' value='8' />
            <format attr='color' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[Ensemble 1]' value='#333333' />
            <format attr='font-family' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[Ensemble 1]' value='Comic Sans MS' />
            <format attr='font-family' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' value='Comic Sans MS' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' palette='green_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' />
              <lod column='[federated.0dyzype106d9b31ck49fa0y7r6m6].[io:Ensemble 1:nk]' />
              <lod column='[federated.0dyzype106d9b31ck49fa0y7r6m6].[none:year:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.66966849565505981' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0dyzype106d9b31ck49fa0y7r6m6].[Ensemble 1]</rows>
        <cols>[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]</cols>
      </table>
      <simple-id uuid='{F2BC0849-99DE-424F-9A1F-9DA4FA0353A5}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard project05'>
      <style>
        <style-rule element='dash-text'>
          <format attr='text-align' id='dash-text_4' value='center' />
        </style-rule>
      </style>
      <size maxheight='1169' maxwidth='1654' minheight='1169' minwidth='1654' preset-index='14' sizing-mode='fixed' />
      <zones>
        <zone h='9410' id='3' name='KPIs' w='99093' x='846' y='7528'>
          <zone-style>
            <format attr='border-color' value='#1b1b1b' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='5133' id='4' type-v2='text' w='31258' x='35187' y='1112'>
          <formatted-text>
            <run bold='true' fontcolor='#4f8d45' fontname='Comic Sans MS' fontsize='18'>World Happiness Report 2021</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#eff3e3' />
          </zone-style>
        </zone>
        <zone h='8982' id='5' is-scaled='1' param='C:/Users/Rachad/Desktop/Rachad/Ironhack/Project05/happy minion.gif' type-v2='bitmap' w='15357' x='21644' y='-1711' />
        <zone h='7956' id='6' is-scaled='1' param='C:/Users/Rachad/Desktop/Rachad/Ironhack/Project05/sadd.jpg' type-v2='bitmap' w='11971' x='69347' y='-513' />
        <zone forceUpdate='true' h='6416' id='7' type-v2='text' w='6046' x='19347' y='684'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Comic Sans MS' fontsize='12'>Team:</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Comic Sans MS' fontsize='10'>Katerina</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Comic Sans MS' fontsize='10'>Rachad</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='6929' id='8' type-v2='text' w='8767' x='79444' y='171'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontname='Comic Sans MS' fontsize='12'>Dataset:</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Comic Sans MS' fontsize='10'>1878 rows</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000' fontname='Comic Sans MS' fontsize='10'>12 columns</run>
          </formatted-text>
        </zone>
        <zone h='61506' id='9' name='How happiness looks on a world map ?' w='35067' x='-121' y='16681' />
        <zone h='6501' id='10' name='How happiness looks on a world map ?' pane-specification-id='0' param='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' type-v2='color' w='8162' x='8767' y='20017' />
        <zone h='46536' id='16' name='How the different metrics change during the years' w='35913' x='35006' y='16681' />
        <zone h='20274' id='17' name='Could money buy hapiness' w='31560' x='71161' y='16766' />
        <zone h='24722' id='18' name='How some metrics correlate with the life ladder ?' w='31560' x='71342' y='37211' />
        <zone h='37297' id='19' name='Impact of Covid-19' w='35550' x='71161' y='62789' />
        <zone h='36099' id='24' name='The top 10 happiest countries in the world (2)' w='35006' x='0' y='63559' />
        <zone h='35329' id='27' name='Selecting sample for study' w='35369' x='35248' y='63901' />
        <zone h='5817' id='30' name='Selecting sample for study' synchronized='1' type-v2='currpage' w='9613' x='46796' y='96065' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2650' minheight='2650' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='49' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98632' id='48' param='vert' type-v2='layout-flow' w='99032' x='484' y='684'>
                <zone fixed-size='105' h='8982' id='5' is-fixed='true' is-scaled='1' param='C:/Users/Rachad/Desktop/Rachad/Ironhack/Project05/happy minion.gif' type-v2='bitmap' w='15357' x='21644' y='-1711'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='93' h='7956' id='6' is-fixed='true' is-scaled='1' param='C:/Users/Rachad/Desktop/Rachad/Ironhack/Project05/sadd.jpg' type-v2='bitmap' w='11971' x='69347' y='-513'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='6929' id='8' type-v2='text' w='8767' x='79444' y='171'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontname='Comic Sans MS' fontsize='12'>Dataset:</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontname='Comic Sans MS' fontsize='10'>1878 rows</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontname='Comic Sans MS' fontsize='10'>12 columns</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='6416' id='7' type-v2='text' w='6046' x='19347' y='684'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontname='Comic Sans MS' fontsize='12'>Team:</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontname='Comic Sans MS' fontsize='10'>Katerina</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#000000' fontname='Comic Sans MS' fontsize='10'>Rachad</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='5133' id='4' type-v2='text' w='31258' x='35187' y='1112'>
                  <formatted-text>
                    <run bold='true' fontcolor='#4f8d45' fontname='Comic Sans MS' fontsize='18'>World Happiness Report 2021</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#eff3e3' />
                  </zone-style>
                </zone>
                <zone fixed-size='106' h='9410' id='3' is-fixed='true' name='KPIs' w='99093' x='846' y='7528'>
                  <zone-style>
                    <format attr='border-color' value='#1b1b1b' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='61506' id='9' is-fixed='true' name='How happiness looks on a world map ?' w='35067' x='-121' y='16681'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6501' id='10' name='How happiness looks on a world map ?' pane-specification-id='0' param='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' type-v2='color' w='8162' x='8767' y='20017'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46536' id='16' is-fixed='true' name='How the different metrics change during the years' w='35913' x='35006' y='16681'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='237' h='20274' id='17' is-fixed='true' name='Could money buy hapiness' w='31560' x='71161' y='16766'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='24722' id='18' is-fixed='true' name='How some metrics correlate with the life ladder ?' w='31560' x='71342' y='37211'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37297' id='19' is-fixed='true' name='Impact of Covid-19' w='35550' x='71161' y='62789'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36099' id='24' is-fixed='true' name='The top 10 happiest countries in the world (2)' w='35006' x='0' y='63559'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='35329' id='27' is-fixed='true' name='Selecting sample for study' w='35369' x='35248' y='63901'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5817' id='30' name='Selecting sample for study' synchronized='1' type-v2='currpage' w='9613' x='46796' y='96065'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1036C8F0-578D-40F2-AA53-0158D061568B}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='89'>
    <window class='worksheet' name='KPIs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='169'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.0dyzype106d9b31ck49fa0y7r6m6].[:Measure Names]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Perceptions_of_corruption:qk]&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
      </viewpoint>
      <simple-id uuid='{275E6308-4C5D-4B4C-A2BA-BDD28623A5D6}' />
    </window>
    <window class='worksheet' name='How happiness looks on a world map ?'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{0103779D-08C7-4063-A004-074813B2C929}' />
    </window>
    <window class='worksheet' name='The top 10 happiest countries in the world'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='169'>
            <card pane-specification-id='0' param='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0dyzype106d9b31ck49fa0y7r6m6].[io:Ensemble 1:nk]</field>
            <field>[federated.0dyzype106d9b31ck49fa0y7r6m6].[none:Country_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E7B03903-0D0E-472E-BE13-1EE7A535785D}' />
    </window>
    <window class='worksheet' name='The top 10 happiest countries in the world (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='169'>
            <card pane-specification-id='0' param='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]</field>
            <field>[federated.0dyzype106d9b31ck49fa0y7r6m6].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C677094E-C0AF-456A-A8E3-7BBAC42CAB1A}' />
    </window>
    <window class='worksheet' name='How the different metrics change during the years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='168'>
            <card pane-specification-id='3' param='[federated.0dyzype106d9b31ck49fa0y7r6m6].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{D867A27C-283B-408F-A9A1-226E865C8472}' />
    </window>
    <window class='worksheet' name='How some metrics correlate with the life ladder ?'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='168'>
            <card pane-specification-id='4' param='[federated.0dyzype106d9b31ck49fa0y7r6m6].[:Measure Names]' type='color' />
            <card pane-specification-id='4' param='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
      </viewpoint>
      <simple-id uuid='{5A6A5221-FD1E-4187-9A2B-E09BDC26F569}' />
    </window>
    <window class='worksheet' name='Could money buy hapiness'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='168'>
            <card pane-specification-id='0' param='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Log_GDP_per_capita:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2017</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0dyzype106d9b31ck49fa0y7r6m6].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EE3E58A7-AE57-4269-9C99-3003C4B44530}' />
    </window>
    <window class='worksheet' maximized='true' name='Impact of Covid-19'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='typeinlist' param='[federated.0dyzype106d9b31ck49fa0y7r6m6 (copie)].[none:Country_name:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0dyzype106d9b31ck49fa0y7r6m6 (copie)].[none:Country_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3CFBDF3C-FFF6-45E3-9EDC-A07C644B0524}' />
    </window>
    <window class='worksheet' name='Boxplot'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{74718B4A-8FAA-4D2A-B299-F43C444CAF04}' />
    </window>
    <window class='worksheet' name='Selecting sample for study'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='168'>
            <card pane-specification-id='0' param='[federated.0dyzype106d9b31ck49fa0y7r6m6].[none:Country_name:nk]' type='color' />
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Perceptions_of_corruption:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2020</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{08BC8BDA-5C2F-4736-8E13-1AAB9CC909A1}' />
    </window>
    <window class='dashboard' name='Dashboard project05'>
      <viewpoints>
        <viewpoint name='Could money buy hapiness'>
          <current-page>
            <multibucket>
              <bucket>2017</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <highlight field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Life_Ladder:qk]' type='size'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='How happiness looks on a world map ?'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='How some metrics correlate with the life ladder ?'>
          <zoom type='entire-view' />
          <highlight field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='How the different metrics change during the years'>
          <zoom type='entire-view' />
          <highlight field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Impact of Covid-19'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='KPIs' />
        <viewpoint name='Selecting sample for study'>
          <current-page>
            <multibucket>
              <bucket>2020</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <highlight field='[federated.0dyzype106d9b31ck49fa0y7r6m6].[avg:Perceptions_of_corruption:qk]' type='size'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='The top 10 happiest countries in the world (2)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='30' />
      <simple-id uuid='{6F224BC8-B448-4FAF-9139-D54B4E548588}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Boxplot' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2d6Xdc53nYf/fe2XcMMNg3EiS47xItU7IpRZFU23HSJk5cJ7bspD39lH+g
      Pf0r2tPv+dQmac9JG8eu7NiVFWujLG7iIoLEvg5m35e79gNIiCCAuYPBAIPl/s7RkTR45r3v
      zLzPuzzbKxiGYWBhcUgRW90BC4tWYimAxaHGUgCLQ42lABaHGksBLA41lgJYHGp2TAEs66rF
      fmDHFEDX9Z1q2sKiaVhbIItDjaUAFocaSwEsDjWWAlgcapqmAKV8hmgsiWX7sdhP2JrTjM7j
      8Wm8Tgmn10+b19GcZi0sdpjmKIABIhrZokK3JKBpGpqmWb4Aiz1Pk1YAA0mSsBkihrHy38Dq
      vy0s9irCTiXEaJpmKYDFnseyAlkcaiwFsDjUNOkMYGHROJOTkywuLeOwS1y4cAGn07lrz7ZW
      AIuW43K5eDw1h83hRBCEXX32oT4Ea7qOKAi7/qVbrOezm7e5eO4sDod9V597KLZAmq5jGGCT
      vlrw3nvvPW7cusdQXxc/+fG7LeydxcTEBA/HxqmUSnzt6ku7ugU68AqwuLjI//7Hn5NKJfjD
      P/g258+fB+DSpUvkSgpXr1xocQ8tfD4f/YNHCId9iOLu7soP/Bmgs7OT19/6FucvvczJkydX
      Xy8Wi/T0dJPP5VrYOwuAZCJBMR1jaX4OVVV39dkHXgEKhQLzU08wDJ1YLLb6utfrxeP1EwgE
      dqUfxtN/LDZG0w1owVHswG+BFEUhlkhSKJaojB5Z8zev285unH9jsRj/8H/+iUQiwbfe+X0u
      X7688w/dR3i8XpbiKbrOjO76FuhQWIEezSZ48ugh3337m6uv3b1zh5sPpzna28brr1/f8T7k
      S1Vu37nLN69d3fFnbRXdMBCgpdawX/3Lp1y7egmPa/cOwHAIVoDFxUU++MX/pVgs8kV3aPUQ
      nMlmKecSpFz1Je8XSvLTFWPrg6RcLjM9NUM8FiWZTNLe3r7lNnaK3/zmN9y+e49wKMD3v/99
      XC5XS/phGEZL9ohNCofWmJoYJ5HMcuLCJQKu3bXl1qK3t5f/8O//CsMAUfxq8F6/fp2peIXv
      /MGbdbUzHc1wcqgDm9TYLCmgc+TI0T1XLeP111/H7fXz8pXLa76f3cbttLfk+c1RAEHiyLET
      yOqXeJ22PZsP8OLY6+vwAUZdloeTg2EwdFR16wPYMAz8Pi+wEiK+25YOMx5Oxzl5qoK3RRPX
      Rx99xO07X/DowV2+9yd/gs/n27VnN20LVMkuY/d3IgkC7IN8gPfee4/7D8dYmp3k3Xd/tKPP
      0jSNqqJRqigEg0Fstr218+wO+3A5Hdhsrfm9rl+/zvXrO38O24imHYKzmQz+YBDx6R55Lx2C
      N0NRNWySuOOHv0w6za8/+JBcscprVy9w/PjxHX3eVrh//z6Li4vY7XZeffVVHI79mc5qGAa6
      YSBt0YrUtKkoGAo1q6ldw75LM57T5SLS009q7DHhcHhXnlkv3d3daIKDoM+55yeszSgWi/zP
      //W/SKWzvHzlEt/4xjfqfu/eWovrZH5+nl/+86+oVCp88xuvcfbs2VZ3qSb5fJ6Jh3fJZzLM
      zMzsKSsQQJu/NZafZuH1evnRj97l85u3+NrLV7b03n3rB0jlyjx6eJ9rr7y8Y894xqNHj0il
      s9hsIi+/9FJDWyZdX1minw/I2wskEgmSmRwuh43+vr59uwpUFY1/+egGb71+bUvv21u/xhao
      yCqyqu3Ks9xuN9HoEj6vt+E2RFHYc4MfVjzls0tJisVSq7uyLQRA2sCMuhIJvPkcvy+3QAAu
      pw3HLu3hh4aGyGQynD59eleet5sk4nGUQoqlapZjI0f35QpQrVb55NPPmJhZoL+7ndHRUQA+
      +eQTPv70BqFggO/9yZ8QDAbXvXdfKkAmk+HB/YckkwkWFxfp7e1tdZf2NaWKsmsGgZ1AkiQG
      Bgawe9vWnK++/vWvEw6HGRwcxO12b/jefakATqeT7p4e2iOdu+o0aTaxWIxkJo/HZWdwYKBl
      sTgup21XggJ3Ck3TiC4tkMpXSAeda5RgLpajs1tlk/G/PxVArlaZnVugIqu0Bby7FtLcbOLx
      OKlUGkGAgf7+limAprcmDqdZGIZBqVRCqcpUq9XV12dnZ3n85Al2ZL728pUN45z2lAJEUwWK
      ZZmRvtq2ckVVQa3gFFeUYb/S2dm5qrytGvzlSoXHEzMc6evcc6ErW0EUBHzutU48n8/H+fPn
      6Qx5Nj3b7CkF6GrzYrTVZ2mpKhqqtrcCy/YjV69eJZou8/Ybr+J07KnhsCV0w6BYlte9Hgl6
      cNg3P9/sKbucIAiroRRmuBy2dRq/UyiKwsxSilK5sq9nyc0Y6ArirDFI9gOSKBL0rd3iJBMJ
      vngwxsTEJIqibPi+PaUAe5Xbt28Ti8d5//33m9puPB5nbm6Oubm5lirWfCy3az6VnUI3DMrV
      tYM8k8mQScWILi1tGoG7b9c8TdPRd2nQ2CSJvkiw6X4HuVqlUi4DjV0rq6oqmUwWWdUIBXx4
      PJ4tt/Gb3/yGsXu3SS1NtTQhZjvo+kq+d65QJhz6yiBy7vx5YrkqF04f39Ra2DQFmJ18TEEW
      GD1+rOGkkXrRNI3FeIpcLs/IyNEdfdYznPa9N1cUCgU+/OgjFhYWeP36Nzlz5szq32RFw24z
      j3R9/fXXeeXaazjt0r4tEObxePjj7/0Zv/rgY75+7atQCJfLxUB3O22hwKa5xk36VVXm56J4
      gkEqioobcUcTYtrb2/mjP/wuXz64z/Dw8I4nmOi6TiJbpM3nRtOat1XQdR1V0xAFoaHvy+fz
      cf2NN/n81h1OnDix5nv4YiLK6eFIXauWTaSpn6sV2ETobfet+Q7u37/Pz/75XxgZ6uFb77yN
      d4NQliYpgIg34Kcj6KFYVfC5VpbinXSrV5QKimbsSnKJKIoIwspsKknNmymXYzGmZ2axSSKv
      v/FGQ5/F5TTwuBzr3ntptPdQlX2syCoLyQKXn/sejh8/zr/r6cNuE/H5fBuOx6YpwOlToySy
      ZToD5vvQ9957j1g8icft5Hvf+15DT7TbRKRdDC5r87vqKlvz/vvvMz41i8/t4Pvf/37NMh/f
      +ta3ttWncrnMvYdjjE9McezIIF1dXat/u/0kyvmjnTj24NZtJ3DaJQYia2N9vF7vhrP+8zTt
      27G7vPS46rPhv/nmm3x+6zZXLl1s6FnVapVSLkOlmKdYLJp+yO1isGJSa+/oMJV97bXXmIz9
      km9/+/WGZt94PM4//dPPKJYrfP1rL3Plyubx7aIo4vd6OHX69LoV4Mpoz5afvZ/RdYNSZb0f
      wIyWmEHtdjsel7Ph9LtcLsfDB/dWil49V+1tp7hy5QonTp7izTffNB3UT548wWmUeXDvi4ae
      FYlE+MlPfsxr116pOfhhxQoUSyRZisYoldaGMwuHaPsDoBkGFWX9WVA3jIMXDh2JRHjnnXd2
      7Xm/+MUvuP9wjLt37/Duu+/WHFgdHR2cPnOO9sAm0Vd1UO/g1TQNuVTAjr5qTj2MPEuJTKay
      2FHXpETem1hmpC+8qdN0zyiALMtkczkMAwJ+3xp7tKbpiGLrZrR33nmH33/rrboPlYqqYexS
      dFm2WGF+aZmRo8NNa1PTNLLZLIZh4HK5dnyLuV28Xi8/fvdddN1Ydy48P9K1ybtW2DMKkEql
      +PTGZ0SXlnjrrd9nZGQEgJ/97Gd8OTZOT1cHf/EXf9Gy/tVbbSCbzRKPxxHVEkODg017/q9/
      /WtmZueQRJE///MfYLfbCQQCvPPO23x+8zYnTpxo2rNKpRK//e2HzM0vcP2br3Hu3Lmmtb1T
      rFjo1k9OZhNWyxRgainNmbP6apqgJEn4vB6OHRtZc6D7zne+Q3//XS5cqK+OfypXJuR31R1T
      9CKapqPqRsOxMYV8nnQqhRMZwzCatmq9+eab/O7mLV66fGlNm067Dbdz7c/4/vvv8+DhI/w+
      Dz/4wQ+2fNby+/380R/9IXfv3t0Xg387tEwBJElcY1b0+XwMDh9F1XTa2toabjeeKRL0OqEB
      b/TS0hK/+MUvSaXTvPl7b9StdM+jqirlYhYl0Pwirw7beh+Ewy7hdq6t6PbGG28QDIW4dPHi
      qnwqleKnP/0piqJy/vw5rl7de0V6W0HLFKCrzbuuFqSrCeG4JwbNTZWb0dPTw09+8mPu3q1/
      xXmRl69exe5wcOHChR0/s5TLZSYnp5ianqG7u3uNH0AS14ZBhMNhfvijd7lz5w5XLl/a0X7t
      J1piBr1x4wbxWJwPPvhg9TVd18nmSyQyhZYWkFXU7ecZ7IQJcnx8nOnpaW7evLkatqDrOrl8
      nlC4fU0m1GZIe7QyRStpyQowNDSExx8m5P/KVFgulZifm0HTDDqCXkItqjSXypXJFCqmcsvL
      y/zs5/8XWVF55epLXLz4lVPvme25mUoQDAZXL9Z41q7X6+XMuYssJvIMPrfyKYpCsVShWq3i
      cDj2jD+gUqlw7949DCDS0cGRI0dM37PTtGw68HkcGyRiCy25Jud5XE5bXZlRXV1d/OVPfrxu
      8APcGluiXN2dCtABr5OTQ2u3fWNjY+TyBT755JM9FeQmiiI2h4tHT6Z29SbIWrTsDPDiUlyV
      ZbLpJIqiUCoPt6RPqVSK3378GYVyhb4u8xlqI0v/L3/5S+TMPP/z7/47P/rRj3b9yh9YUU7Z
      sBMOuBp+vmHiQTWjUChQrlSRRIFQKIQoijgcDi5dOIeIvmdK2ewZP0BfXx//9gc/4O7du2tu
      c9wqFVltOLbd4/Fw4dwpdN0gHDa3RC3Ecywk8jw//7/99ttbfm695MsyXqd5Df9cLsfkzDxK
      Z4D+vr4tK0GpVOLT391ianaBYDDY0Fbl8ePHfPzpDQb7+3jrrbdW6/Komk6xgZidnaJpCnD3
      5g1s3jZGjx/DXsdBS1G1dZGKy6kC+VLjVR5+/vOfc+/+A/p6e/jhD3+45ffruo76NHf0xa3D
      o9kEx/rCqytXpVIhurRIJp0km81uWHWsmYyNjTEzO4fDJtHb+29qDupioYDfrlHIZRuaxe12
      O8eODDIyPEgg4G+ov5cvX0YQRC5cOL+mr4WyzHxs71xN2zQFCIVCxFM5KoqGiFEzwSMRjzM+
      H6OvI0h3d/fq62G/E7fTtiap4cGDB8zPz1OpVEyDw95++226u7s5f/58Q0kyxWKR6amp1f9/
      vt5QR8CFoWuoxoqFSJZlRK3K8GA/pVKpqeECuWKVeKaw5jOMjIxQKBQYferxrfX5kqkUDx9P
      Eg56UBRlzWqoaZrpd6Oq6upv96L8Vg73i4kcxyvyqnm7XC5z87PP8EoyDx8+XC1h2EqapAA6
      ICFiPI3HqH1DTKlUIuCAUrGwLozXJklrXuvq6iIcDiMIQl0JI7pBw0krkiShagayqiGJ4prn
      dYTW5pQ6HA4iHSv1izweT1MTc0J+iXBgbZtTU1MsJ9IUircYHBio+bw33niDgiLxzhuvrisJ
      Ir3w/W6EYRirs/bz8h988AG37nxBOBTgz/7szzYtN/iMga4QXrdz9bdwuVwcHTlGvizT3dW+
      J27K2bQH925+xvDZy/id9XRSZGD4CH1DR5DqTBzXDYOdyBeLpgpoutFwXrJNEje8rK1UUXA7
      bWsUS1F1qopKs3c/hbJMtrB2K3jt2jWuXau/9HfI51oXG1NVVIqVjcuDvIisaGSLlTXJ5Nev
      XycYDG7LySeJAkHP3rAAQQ0zqGhU+Ie//zs+/PxefQ1JEjabtMaKqes61WqVarW6bk+dzpfX
      WVGakUM80BnclrNH0bR15TUAniyk0LS1/bPbRLyu5tcm8rrsBLzbGyQ2SUR4waZsGNTtZJSk
      9ZXWABLZ8rYchZpukNvGOa/ZbDq9B9siHBn1MdDReN3NxcVF/t9vPiAZj/Ptb39rTcRie8Cz
      5ueZm5vjl//8KwqFIjabbU2Fg91EEIQND5gXNgirVTUdZQeq00mSuG2PbaEio+k6ovjVOiur
      Wt3+CUkUcTvX9yGdX1GAbVWT3kO1xTZVgIVojHQyQSGbZWh4qKHG+/v7efeHf8Hdu3fXhetq
      ur7mjDAwMMBf/eVP1t3nuxVyuRzJdIZUKtXYXVzGSlpdMpnk9EmTi+wMA0VRqSrqnrv79969
      e8xMjPFbrco3vvEadvuK6dTvdtAR3HrtoGcUCgU6/DZKhRxOe1tDPgZJFAj6tre6abretIT/
      DT9BMZcm1BZGFByMnGjcJr8ZDqeTj+88QbKvXWJXZt/GP9T8/Dw2m52JiYmG3h9ub+dff/c7
      vHT5wmo+wmaUKxUefjnGrbsPSadSDT1vI3K5HB988AHRaJTJycmG2uju7ub33niDY8dG1kwy
      9X6/qqoSj8eJx+MU8vnV16PRKIIoMT4+UZeHWVHXWwK3Gyf18ccf81/+63/jb/7mb8g/17et
      ICsaD6fjwCYrgCpX+Pz2HU6dOsPE40eMDjU3wfrixYtMLKZ55ZVXmtpue3s7fn9jdutnzMay
      LCXymMVL2u122trbyeSm8DTRBOp0Ojl6dKXYV6OfJRKJEIlEGu6Dpmlk0mkAvM9VmwuFQqsh
      DPXM/olsCVnVcDm+ki2VKxTLcsOhENeuXaOoSrxy+Rx+X2Ormc0mMtC5srXf8FMEO3p47aUL
      LCwuEmqvnVLWCD/96U+ZevyAv/+7v2t629s9SA91BentMB94Pp+Ps+fOMzQ0vMaXYbFCpVIh
      4JaQq5XVLaKiKMzPzpBYXiSZSDTc9kZ5EVtBFAT8Ty1RG64Ai1Nf8uuPPyfgD5DLbc9rt1EN
      z+9+97t8d1utbk4qXybsb3yfu5UlOux30eZvPPl9M3TDwNCbe1IslUrcv3+f5eVlQqEQQ0O1
      z3XPQhb6Xni9XFXqChacnZ0lmSly585dvnb15dUZX9ONuk2xm+F12zdMf2yEDT9J75FTnJ5b
      wN3WxWI0ua0HJLIlytv8wKWKgsdlHgMD9efuNgNR3NhnsF00TaciazQzINxms9HT00NPT09d
      10pJooDfvX6bUu8C297ezpAm4Pc41pxDREHYVin2J0+eMD09QyGX5WtXXzZ1xpmx6Wg5MtTP
      Rx/8Bqd/ez9DV9iHd5fq+CcSCW7ff8zCwsKOPyufz/P+v3zErbv3m/48u03C79md72wzNjsw
      e1z2uvOt/R7HOllFVciXKg1bztrb2xk9cYqhoaFV69Z22FQBJubjnL1wDjfmySG1MLuntR48
      Lntd2xKPx8P49DwuT+MX5z270NoMSZLo6mjjay9darjA117GMFbCWrbDi2mZNpsNX1snU4tJ
      2hoxU6+2+6KLr3E23cydPXuOdCLKUnZ7oavFsrJrly+kUil6gjay6cYOWPl8nsdPxpEVhWg0
      WvNw6/F4DuS9wc/QDQNZWf+7Fcsy7jq3o/lSdc3W1eFw8PLlC2iqUlc+gKrpZAqVdb4Ll8OG
      0KSt54YKkF6e59HkHACxTA4431Dj2WyW6elpFuZmiQ8NNmSaiy4tUSgUECWJ/v7+mrL9/f10
      dEQa3pf7/f4DnTCuqBrFilLnGWBjT3C929lEPM6NO2MMRAL0dHevBr65HLa6DQe6blAoy+sU
      oFhRmrZF3FABHG7vaoWB4ZH6QlYNTeaTG3d45drV1X2V3W4nHA4TDocbvnlEUZSV0OM6DrfP
      V0WwWI9NEvFv8zz27OINM1RVpSfkRjAavyfCYZcY7l57Bk2n02STMYoZkZ7urm1HlG74bm+g
      jUAhy1S8xIC7DpOiYTA1MYnX78MwDDRdR9M0NE1DUTV0w6grDn0jdMNA13UEQdjxizD2Apqm
      UVVUKlUVr9fbtM/87LcoV1X8fr1mu89kq/JKmMcz2Wg0yr1HU0RCHjo6OmqefSrVKslknGAg
      gKqqa57X6FgAqJTLLCwnCPpcKIqyZQUwDINisYisanhczs3PAGMT02jo3Ess091T29Fj6Cql
      coXoYpSBI0cJP72tT5IkDFZMZ/XEoW+EKAjkSjJtgebG3O9VNE3DYZOw26SVJPImfWZd13HY
      bTjsNtN2bTYbTqeTWDyJ3fHc5RuGgV0SMAzd9Pe8cuUKdrudc+fOrTNgNDoWYMX03Nnma7id
      arXKhx9+RFlWOHZkaJMzQDJOb08XUzOLnL34kmmjgmTn7IWLDB3N43vhqsrtXiyXyWbJphMY
      auOWnf2Gpq8k5exskuXmeL1ezl58mUTxU44dO7bmb0Gfs24z6BcTywyPjBLwrowJVVVJJBKk
      UqldSSPdCFEUGRoaxDCMlWT9jYQK6Sg//+f30Q2D6PJy3Y37/f515qlyVdlWnu/rr7/OyZOn
      +IPv7pTveO8hCGBrQTWJZ2QyGf7xH/6exakxbty4sfq6w+nkyfQiDpd7dVY3DINKtUq+WF63
      rTk9HFmTUyDLMrfv3CGdKzI3N7c7H+YFFEXh008/5Vfv/5aJ8fGNV4BQezdvvfkmiqLiDzae
      D6DrOpVKBVUz0Brc873//vssxxPMz83wp3/6pw33Zb+gqirZp4FobpejqQXCnp0BzKxAoVCI
      v/rLn6x7fXR0lLmlJK+8cnU1HyCbzfI//vZvkRWNSxfO8c1vfnNV3iat9QN4PB6+9a/+1bY/
      R0VWG95ZOBwOXn31VTTdoC0U3FgBdF1DkmwUiyWWlpcY7GvMulIulZibnUPTdSJtfkINFL3d
      yTIje5Fn2wTDoOl1+W2SiNe9Pe9pR8izJhnG7XZz7evXKJRljgysjRpeyZUwGorb0TSNTCZD
      VdEI+DxrlFbXG799wWazrfHfbKwAqrp69dCKH6BxXizdbWFOVdEolGWGm9jmM8WCFRv/dipw
      r2s3HsMwIJfz0tv3VfhcOl9B1fSGLjOUZZmbN29iGAZ9fX2cPXsWWCmgtrAUpSMcbEoKbdP8
      AJshK9qu3eh+ULBJIt46va31omka6VQK3TDwNXFl0TWN1NN2254rJpZMJlHKeZYWF+jv79uy
      tcZut3PixEkqskpH+KvD8sWLFxEkGydGj+NqQnnFTf0ARwPNmSFEUUCwxv+WkEQBqQml4p/H
      MAyy+SLpfIW+bZQlfLHwr2Sz0d4RQdP1NduU5eVlPC4HU1OT9PR0b1kBVFVlanKSqqJiaP20
      t7ev/q1UUbYVp2QYK1soURB2vjSiVY576yiqTllurtOvXC5z6/ZtUpks/V0hTjdYdGAhnuO0
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Could money buy hapiness' width='192'>
      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
      PzVW0SxeWoGtAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard project05' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='How happiness looks on a world map ?' width='192'>
      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
      rfn/AeagmGqg+XwrAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='How some metrics correlate with the life ladder ?' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='How the different metrics change during the years' width='192'>
      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
      GfnE8gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Impact of Covid-19' width='192'>
      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
    </thumbnail>
    <thumbnail height='45' name='KPIs' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Selecting sample for study' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2dWXBc13nnf/f2jl7QDTR2kAAIEgREiiBAihQ3UbsU0pQlK7biJbHjxDNT
      45rJzENcNTWVKs/DPLimpuIHT1KZuFxlW7aTcSzZ1kpKpCiJm7iDxEasJLbG2gsajd7uMg8U
      QULsBprEQoB9flUqin3OPfc7l+d/znd2Sdd1HYEgS5EftAECwYNk0QWgqupiJykQLBmiBRBk
      NUIAgqxGCECQ1QgBCLIaIQBBViMEIMhqhAAEWY0QgCCrWaAAdHq72mlqaV8cawSCZca4oKd1
      GBkZI6Eb0HQdXdNQVRWxvEiwWliYANCRZQMWXSapS1gMBgAMn/8pEKx0pIWuBk0mE2i6hMVs
      Am6uBRICEKwWFtgCgMlkXgw7BIIHghgFEmQ1QgCCrEYIQJDVCAEsEVo0ihoMomvagzZFMAcL
      7gQL7ibW1k7ot79Fm45iravF/fU/QzKLwYKViGgBloDJt95GC0+BqhJrbiHW2vqgTRKkQbQA
      S4GizPqr/oW/Lzu6jq4oqIEAGI0Y3G4kWdR9IASwJDieeZrQG2+CpmEsK8X6yCMP1J7k8DCh
      f/sdSd8wkixj3fQIrpe/jGyzPVC7VgILngn+ImIm+CZKIIAWCmEqL0cyPrh6RovHmfiHf0QZ
      8s36PWfvHlwvHUKSpAdk2cpgWdpBTdNRNe2hXCQXjUZT5svo8WCurLyr8KuqirKMLpE6NoYy
      MnrX7/Fr19CTyWWzY6WypFWTqmlc6hjmXPsgCUWlZo2X/fUV5FhNS/naZeWXv/wlZWVlPPfc
      c1y/fp38/HwGBwcpLCwkHA7jdDrRdZ14PE4sFmNkZASLxUJdXR25ublLb6AsQ4paXpLlrK/9
      YQkFoOs6xy728s6pTrTPa8juwQDXfQH+6mAjZtPqd5N0XaekpITCwkJ+/OMfA8wU6uHhYQoL
      C7HZbMiyTDQaJRKJUFJSwrvvvsuPfvSjZRGAsaAAc2UFia7uWb9bt26FB+iarRSW7AtMRRN8
      fOnGTOG/RXvfOJ0DE2yqKlyqV8+Jruvok4No4x1gcWEo2oRkur/OoK7rKIpCX18fTz31FDdu
      3MBms1FZWUlXVxeFhYUkEgnGx8ex2+3U19dTXFxMaWkpY2NjlJaWLnLu7kYymcj92lcJv/U2
      id5eMBrJaWzE8cQ+0QKwhJ3gwbFJ/ve/nkZR754JfWVfLU81Vi3mazND10lee4fEpddBiQMg
      52/Asv8HyHZvmkd01IRCJDCFrmrYcu2Y7ZZVV3h0XUePRsFgQDabU7pF2ciCWgBd1+jpvEY4
      mqT2kc1YTbf71E67BZvFSHg6MesZSQKvO2chr71vtKnhWYUfQJvoJHn1t5h3/oe7CrWuafja
      BrhxroP4VBRdB6PFSHHtGqp2bsRomd2XCYVCGI1GZFlGVVXMZjOTk5Pk5eURCATIy8tbcuHo
      uk4oFMJqtWK1Wmd+lyQJKefBfPeVzIIEIEky69ZVcvp8K2bj7AElp83Mvi0VvHemkzubmA1l
      +dSsyU+bpqqqXO/pIRjw48rNpWpdNUbT4nSatYnuWYV/5vexdtBVkGZ/Dl9rPx3Hr6Brt3Og
      xJIMXO4hGU1Q91wDknyzQGuaxrVr17hy5Qo5nxe0hoYGPv30U3JzcyksLCQvL4/6+vpFyUs6
      RkZG+OSTT9i6dSs2mw2bzYbP58NoNKLrOiaTidLSUlpbW/F6vUxOTlJZWUkymSQ/P3/VtWwL
      ZcF9gIGeTtas34iEjqrO3hP8dEMFLruZ89d8JJIqNWvyeXLrWgwSKYcCQ6Eg77z5Bv6JiZnf
      XLm5fOmVV8nLTy+aTNFMzpRDlrrZiapqoN22SYkn6TndhpbChQMYvjZA4cZS3OU3XSdd1+np
      6aGhoYGOjg5MJhPBYBCPx0M0GqWuro7Lly+zadOmBedjLo4fP05xcTHvvfceg4OD7N27l56e
      HiwWC9FoFLPZTDKZJC8vj4GBAYqKijh+/Dgul4s///M/X1LbViILFoA9vwx3nh1JkmYmwO6c
      CNu9eS07HylH18EgS2lrGE3TOH7kCAG/f1ac8OQkR99/j69+81sYFzhqoRfXoRZvRhtpuf2j
      wYS57iBGo2mWXzw1HCIZTcxZI04OBfBWFgM3BZ1IJJBlmZKSElRVZXJyErfbTW1tLefOnWPf
      vn0LzsNMXjQVVY0hSUZkg3nGzoaGBtrb23n22Wdpbm7G6XSyZ88ecnNziUQixONx+vr6kCSJ
      ffv2YbVa6erqYtu2bYtm22pixcwEBwMBfv7P/5Q2/M/+4tsUFZcsxDQA9GiARPMbaCMtSFYX
      xpoXMazZgSTNduHGe0e4+tZnc6ZVVl9Fzf5HF2zTvaDrOqHRq1xvfp1I6AZGUw7eNXup3PxN
      DEbr/Amk4NixYzz11FNZ5/7ACloLFI1G5w6fnjs8UySbB/P274KugSQhIaUcEcnxOJANcloX
      CMDhXYaJrC8wFeyh5eT/RNduzuIm4yF8Xe+QjIXYuPO/zBKyoij4fD7KysoYGRmhsLCQ0dFR
      3G438Xgco9GIw+Hg6aefXvZ8rBRWjADcHg9GozFl38BgMODJy1u0d0mSBNLcrZQtNwfvumJG
      O4dShltdORSsK140mzJlsOOPM4X/TsYHTrJ202vkOMtuxx0c5OTJkxiNRsrLyzl79ixFRUUc
      PnwYq9WKJEm89tpry2n+imPFrIm1Wq00bH8sZdimLfW4lmPZwB1IksT6JzbjWVNwV5jVlcMj
      zzdisi3/JpdoOLUgQSc2NTzrl+Tna31kWWbLli1MTk7S3NzM9u3b8Xg8aKtot5qua4QnOvB1
      H2bk+kfEIiOLsrZsxbQAkiTx+J69mExmmi5dIB6LYbZY2PToFnbu2ftA/FOL3cqjX3qM8Z4R
      AgNjaIqGszCXwg1lmO2WZbcHwOYoJhLsThEiYbUXzfpleHiY/Px8Nm7cyLFjx2hsbKSpqQmz
      2Ywsy6xbt255jF4giViQzvM/ITB8CT4fVJcNZspqXmZt3VeR5PtfVrNiOsF3oiSTRKNRrFYr
      JrGVcBaTEx1cPf7f0fXZlxHml+6kdtff3tWZX+3ouk7zp/+D0OiVlOFV9X9J2YZD953+A/9a
      p06d4vLlyzPNWWdnJ0aTCafLxejY2JK9V9M0jh07xuXLl1OGnzx5cqY/0tbWxr/8y7/Q29ub
      Mu758+eJx+NMTk5y7tw5xsfHl8xuZ94G6nb/N3JyK5BkI0azg6Kq56h57D8/dIUfIDTWnLbw
      A/S3/Ruaev/Luh+oC6TrOp2dnUSjUYxGIz6fj1AoRDQaZWxsjJycHAYHB0kkEty4cQNZlnn8
      8cepqlr4OqKzZ89SVVVFaWkpP/nJTygtLaW3t5f6+np8Ph/hcJjOzk4OHjzI8PAwk5OTtLS0
      8Pvf/56Kigp8Ph+SJNHY2Mhbb73FyMgILpeL7u5uAoEAQ0NDvPTSS+QtYucdbrqKeSWNuIu2
      oCSmkGUTBlPOQzuEGfZ3zhmuJKaITg1hz624r/QfeJXh9/vx+/38+te/ZmpqCkVRaGpq4vr1
      69y4cYPe3l56e3vRdR2j0Zi2xr4frly5QmdnJ11dXVgsFsbHxxkdHcXr9WIymaipqSEQCCDL
      MrW1tfT29tLd3Y3VasVoNCJJEpcuXUKWZXRdJxqNkkwmCQQCuN3uRdsApKoqp06d4urVqzO/
      ybIRs9WN0Wx/aAs/kFGrJs0zojfnsw+yD6DrOufOncPr9WK1Wrl+/ToVFRWEw2E++eQTvvSl
      LxEIBIjH45SUlCBJ0swa/IVya5OKyWQikUhgMplQFGXmT4PBgHzHxnFJklBVFVVVGRsb4+rV
      q7zwwgszs7+6rmM2m1FVFVmWSSaTmM3mRSmckUiEn/70p7zyyit0d3fj8XgYGRmhuLgYn89H
      Q0MD165do6qqilAoxObNmxf8zpVCONBN09G/TRtuyfGy/cV/vO+O8IrrBOu6TnNzM263mzVr
      1iyiZYuHoigoijJrteVSEolE+M1vfsPzzz/Phx9+SDwep7KyklOnTrF582YGBgb47ne/y9//
      /d/T0NDAyy+//NC0Crqu03H2x4z1f3p3oCRTs/0/UVix/77TXxEC0HWds2fPoqoqRUVF+Hw+
      1q5dy9WrV9m5cydNTU00NDSk9KeVeJTwcD/J6QgGsxl7QSkWp3vBBSASiXDkyBEKCgrw+/24
      3W4ARkdHKS4uZnx8nAMHDmBehlGqW32gyspKOjs7cbvdXLp0CbPZTG1tLT6fb2bULBgM8txz
      z81qvVY7qhLn+tVfMNz74cwkoMnqpnLztyisSL2EQ9d1JqYj3PBPEFcVCuxOqvK9GL/wXVaM
      APx+P2+++SY2m41169aRl5fH5cuXmZiY4Jvf/CZHjx7lK1/5yqznosEJRtsuoil3jAJIEp61
      G8hdU70gEei6zltvvYWmaRQWFtLf309jYyPnz59H0zRqa2txuVxs2LDhvt/xsKDrOqExH76u
      NuLRCA6Pl/KazVgdTmBxWiJd10nGgkQm+zAYzNhzK5GN1rSF/9rYCGdu9KDcMdm3qaiUnRVV
      yHc8s2Kqid///vd87WtfQ9d1AoEAzc3NbNy4kcrKSsbGxrBYZk88aarCeMeV2YUfQNcJ9HUS
      DwcXZM/AwABNTU1s2LCBjo4OZFnm17/+NZWVlZjNZpqamigrK5s/oUVkeHiYq1evEolEaG5u
      RlEUTp48STwep6mpiXj87r0OS42u67SdPsrx3/wT7Z99RO+Vs1z9+F2Ovv5/GLnetWjvkSQJ
      s82Dp6gel7cOg8mWtoILx2Oc7eudVfgBWkeGGAzNLhcrpgU4e/YsAOvXr2d8fBybzUZ7ezu7
      du2io6ODLVu2YLpjY8z0xCgjrefTpuksqcC7fmnX3i83N27c4N1338XtdrN+/Xqi0SiaptHS
      0sLTTz9Nc3MzX/3qV5fVpr7WS1w4/LuUYSaLlae++X3suZ77Tr+rq4uf/exnvPbaa/T19bFn
      zx5isRgnTpzglVdeIRaL4XQ6Zz3TPurjRG+q2XKoLSxmb9X6mb+viKUQkiSxc+fOmb/nf775
      Ze3atQBs27btrmfU5Ny1nZpY/tpwqbly5Qq7d++mpaUFs9nM8PAw09PTVFdXk5ubu+xre3RN
      o+fymbThyXiMvpaL1O1+5r7fUV1dzbZt28jLy6O9vZ0333wTTdOQJInXX38dl8vFq6++OusZ
      VUtfp3/xGy3YBRru66R/ZGHuxv1gstnnDs+ZO3w14nA4CAQCPP744wSDQTZs2IDL5WLz5s20
      tLTw1FNPLas9qqoSDsw96x0aH54zfD5u3LjBwMAAdrudqqoqbDYbLpeL2tpa/H4/TzzxxF3P
      FDmcs/z8OylxzV5UucAtViqXr7ZRUBqjtDAXlvGaVEOOE7MjN6WvLxuN5HhLlvUEtuVg3759
      M/9/q3Vcv/5mc15cfHtn2mIQD0WJjk2hKSpmp42cIgeycbZrq2kqBqOZZDyWNh2Dybwgm8rL
      y/n+978PQGNjI42NjTNhExMTeDyeu9LPtVipKyiiZcQ3az96ea6bNbmz4y/QBZLwer0k43F0
      ScK4zNekFtU1Mtp+aZYIDCYL3potWB2uZbHhYUPXdfydowS6R7iz9JiuWyh9rBJTzu3BCN1g
      oKhyPX2tl9KmV1pdu6CtlpqmzUwqJhKJmT9NJhMHDhxAluWUQ747KtbhdTjpnhgjrigUOlxs
      LVuD9QsHLKyITvBC0HWdWHCCZHQKg8mCzeNFNj48Ry8uN5HRSXznr6cMs3rslO1cN3MSBsD0
      ZJBP/vX/Ep2avCt+8bpadh76OvICliu3tbVx9OhRysvLMZlM5Obm4vf7CQaDM0e/vPTSS/ed
      /ooZBr1fJEnC5vHiKq3EXlAiCv8CmewPpA2LBSIkIrMHF3JcbvZ+9a8oqa7DaLbcvDg9x07N
      Y0/w2IGvLajww01vIi8vj3A4zP79+/H5fDPrterr64lEIrPiDw8P84c//IFAIH0+7mRFjALd
      K729vRw+fJhnnnkm5UTU0NAQ7e3t7N+/XxzVfo8oscSc4WosCc7ZS0Ac7nx2HvoGidg0SiKO
      xebAuEgz5O3t7RQUFOD1ejly5Ajr1q2jtbWV9evX09LSQnV19az4xcXFKIpCJBLhgw8+wOFw
      YLVacTqdKIoys4arouLm6tFV6QKdPn2aDz74gOrqaq5du4bdbieRSHDo0CF+9atfsWXLFpxO
      J4cOHRICuEeGL/Ux5UszqifB2ic2ElPjOJ1OwuEwLtfK6mtdu3aNtrY2pqensdlsDA0NUV5e
      zujoKAaDAbvdjs1mm3GbVmULoGkaJSUl6LrOgQMHGBkZob+/n9bWViorK3G5XLMmzQSZk7s2
      j6nh4KwO8C1yCpyYcsy8/eY7fPnLX+aPf/wj+/fvJ5lMMjAwwLp16wiFQhQVFdHc3ExZWRk+
      n2+mll6OmXODwUBjYyMGg4Genh66u7uprKyksrISVVUpLS0lkbjdyq3KFkCwdOi6zmSfn/G2
      oVlHQlrdORRvq8BoMfGLX/yCvLw8Ojs7KS0tJRwOz4jgxRdf5Fe/+hWHDh3iwoULPPnkk1y5
      cgWLxcL3vve9Zc9Pa2srj8xxRZUQgOAudF1HiSaJjE2iJVUsLhs5XufM6M+FCxdobGzk0qVL
      jI+PE4vF2LhxIwMDAwwODqIoCh6PB4PBwAsvvMDHH39MYWEhW7duXXLb4/E4J0+eZOPGjfh8
      PoqKiggEAjNDqA6HY9ZhAKtSALqu8/HHHzMwMEBBQQGRSIT169dz+vRptm7dOtPsPvro8p7a
      lu2Ew2HOnDlDQ0MDXu/t4+ZPnz7Njh07lqViTCQSdHR08NFHH7Ft2zb6+vp49tln+e1vf8ve
      vXtpa2vj1VdfnbFl1Q6DOhwOnE4ngUCA4uLimd1avb29PPPMM3R0dDxoEx96dF2nt7cXv9/P
      2NgY8XicHTt2EAgESCaTdHV1oes6u3btWjavIBQKceHCBQ4ePEgymUTTNN5++21effVVFEVB
      VdVZq0hXZSdY13WOHz/Ovn37GBkZoa+vD0VRKCsro7S0lMOHD1NTU/OgzXzoUVWVSCTC+++/
      P1Pjb9myhaNHj1JcXExFRQUXLlxg+/bty2aTxWKhqKgIWZZxuVzU1dXR0dFBd3c3TqeTJ554
      YvZW19XoAglWBqqq8vOf/5xdu3bR09MzszTZarUyODjI/v37uXbt2rIv0rsXVq0LJHjwqKqK
      3W5HVVVyc3OpqKiYORDg8ccfp6mpiV27dj1oM+dEtACCrCZlH+DC6eNMxSEai6Ei8+xzz2MR
      ZVrwEJKyBZicnERNJognFKw5FhxOD8YMnSXRAghWEymLtcvl4szx9zj+wWEixswLv0Cw2kg7
      DFpQ4OVGaAI1NIqeU5jmWlmday1XwOxiw4Yq0aMWZIyeiKD0n0UP9ILZgaFsO3Je1bIf6JVW
      AJrZxSOlCXq7erHlOimwp7hNXde5cb2PgrIqNE0HdHRdX1UXLwiWHz0ySvyT/4Xm74HPPXCp
      5Q1M9d/AWHuQxTpLKBPSCmC8v4Oz1yb4m795Fps5/crKLdt24LveSVwFm+HzG8mXYU+wYJWi
      q8TP/vTmnc13/pyMkbj0OlLeeuSCjctmTloB2HK97NzsRDHasaYr/5KEQU9Qsn4zdpME3Dy8
      VnSCBenQJkfQR5tTuzpaEq3vJKbi9Ks3F5u0AjBbcmjY8xzuFJ7PbSQKSlbmAbaClYmeiMAc
      F1ro0cy2Mi4Wafut46PDXPjsDNMP18kiggeMZMsDU07acDm3fBmtmUMA+R43JlSiQgCCRUTK
      8WBc92TqMKsbY/XyrhtKKwCjAa609WJZletFVxe6rhNNqoxHkoTjCtpDPIggSTLmrV/HWP0M
      GG5tnJeQnKVY9v5XJMfy3r2ctnjnOHMpKUmgqxpiJmzpiCU1rgxH8E3e3qeaazWwpcROXs7D
      ua9ZMuVg3vUfMW16GS00gGS2I+dVI5nTu0ZLZku6xXCXz5/BW7aOkuICDPcwOSGWQmSOoumc
      7A0RjKl3hZlkib1VLlxW0QQvJSmr9kunjtHV08WHH50iqT0cV+2sRAZC8ZSFHyCp6Vwbiz50
      cypTU1P86Ec/WjE79lJWL5sbH2N04j103S6WNywhY1Nz3287EUmi66RZhrI6cTgcrF+/HqvV
      yt/93d/h8XiIxWLEYjGsVis/+MEPFnSW6L2S8k1Xmi5TWllHGTrnPztJw4492ERLvOjM19nV
      SHk8z6omGo3S0tJCUVERBw8eZGJigv7+fiRJoqysbNmX0aTsA4yNDBGZjpFUVAwmC5UVa5Ez
      rIVEHyBzOsamaRuNpg332o3srnA9NDc+rkRS1usFRaWYAwGcbk/GBV9w71R4rPT648SUu2s9
      SYIN3vT3YAkWh7SOzdEPD/PUC18i1+kQIlgiLEaZnWudnB8IE0ncFoFRlthcnEOBfemvYF1u
      Lly4wPnz56mrq2NiYoKamhqampooKioiGAxSUlLC7t27l82e9Muhp4P88Xf/xsGvfwfv8twH
      nZW4bUaeqnYTjCm3VgbjtBiwPKRzL7FYjLq6OgYHB9m5c+fMDZxTU1Ps2rWLTz9NcSH2EpL2
      KxcW5TM2HnyoRiBWErFYjKGhIcLhMAZZIj/HhNd+87+HtfADBINBFEXh0Ucfpa2tjcLCQmw2
      G48++igXLlxIeSHiUpKyE9zZcpHT569g0OCFb3wHryXVo6kRneDMOHr0KHa7nerqaiYmJnC7
      3eTn59Pd3c309DSKotDa2sq3v/1t0Q9YQlK6QBs2NTLk85FU5HmPjtM1he7eftZXVy2BeQ8v
      4XCYcDjM2NgYXq+Xn/3sZ6xZswa/38+ePXsoKCigvLxcFP4lJmX57my5yHgoiq5CivvHbqPr
      dLRcoXtkiup1lZ//JHaEZcLGjRvp6uqipKSEK1eu8MILL/DZZ5+xadMmwuEw9fX1SJIkvuUS
      k7YF6O0bwG4yEVPAlWZNlq7rTMeTxKeCJFUdgyT2BGdKTU0NNTU1BINBfD4fFRUVuN1upqam
      eOyxx7BYLOTl5YlvucSkXQx34eQxro9Oc+ClL2Gbx6UPBoO43W5A9AEyRdd1/H4/BoMBs9lM
      LBbDbrczPj5OSUkJIyMjFBcXCxdoiUnr4o+MT+CQJMIJsM25LZKZwi/IHF3X6evr49y5c7hc
      LsxmM9XV1Zw+fZrS0lK8Xi/d3d3s3bv3QZv6UJPWw3/2hQNUV699+BajrBAkSaKrq4udO3ci
      SRJOp5OJiQkKCwtnxsr9fv+DNvOhxu/3p24Bulov4/NPMT3aS93aHcttV1Zw6wZ0VVVZu3Yt
      0WgUTdNwOBxUV1dz4sSJZZ0RzUYcDkfqPoCmqWiajqIoWKzWezqmSPQBBKuF0dHR1C6QLBto
      u3KRro4OcSqE4KGlr69vjmNRfD289/6H4lQIwUPL9u3bU7tAly6cRdV1ytaso7iw4J7WAwkX
      SLCaSNkCVFdVMDY2zkDfDdJsWRUIHgpSCkDBSHGek1BoUoyCCh5q5rwjzN97kam8RtbmZp6g
      cIEEq4mU8wAdzRcZGg8TDY2y/bnG5bZJIFg2xC2Rgqzm4d16JBBkgBCAIKsRAhBkNQsWQGw6
      QjiS/nAngWAls2ABBAPjnDrz2WLYIhAsOws+8dPldCIhoeo6aBqqqop9rIJVwwIFoDMyMkr5
      mnJkSUL6fPhTDIMKVgtiHkCQ1YhRIEFWIwQgyGqEAARZjRCAIKsRAhBkNUIAgqxGCECQ1QgB
      CLIaIQBBViMEIMhqhAAEWY0QgCCrEQIQZDVCAIKsRghAkNUsUAA6fT0dXG3tEEcoClYlC9wR
      JlFSVsb1s1dmrkcVtxoKVhML3hJ5/uw5Htm8DYmb14lJkiRuNhSsGha4JVJnfMRHVJEpKytG
      RmyJFKwuxJ5gQVYjRoEEWY0QgCCrEQIQZDVCAIKsRghAkNUIAQiyGiEAQVYjBCDIaoQABFmN
      EIAgqxECEGQ1QgCCrEYIQJDVCAEIsppFEIBOKBRaeDICwQNgwQLQknEuXLq6GLYIBMvOgq9J
      lU1WXM6cmf3A4ppUwWpiwQJQE1EkZFQkjOKaVMEqQ2yJFGQ1YhRIkNUIAQiyGiEAQVYjBCDI
      aoQABFmNEIAgqxECEGQ1QgCCrEYIQJDVCAEIshohAEFWIwQgyGoWJgBdp6eznZa2DjSxAlqw
      ClmQADRNwR+OYdOmCMbE3WCC1ceCBCDJMigxxqcUHBbhTQlWHwveD6AqSVRdwmy6ubdG7AcQ
      rCYWbUPMrS2RmqYhy5m3Brqu39Otkist/kq06X7iAyvOpqXMw630F7wl8haSJM3U/PfSAtxr
      i7HU8TVNu+erXld7Hm7d8XwvFddKy/O95kFVVWRZxvDDH/7whxm/JQNSGdDTfJFPPjtPOA5l
      Rd55408OX+fDE2cIx3RKC/PnjK+rUT58/wjtHZ34I0nKSgqR5oj/+UMce/8dLjS1UFq1Aavp
      dpw7C86U38f7hz8krJgoLcwDYKi3nYRsZWBwkPw8T9p3BH3d/OG9o4xOJqlaUzx3nnWdzz4+
      TEffCOGoQqHXM28elPgUb737AX6/n7I15bPipyv8V899SlPnEKWlxZjuKFzp4rdfPk1nZy8B
      1UaRxz53HoBYeJy33z2CyeHG47LPSjNV/Hh4nHff+4DhwDQVa0rm/3fTkhx5521CCZlCrwf5
      jvTT5eHSmU+5fKWZHE8JrhzLrPQlSVqeeQBJ0kGHqelYRvFDo4P4pxIZqlnnkc312CwWjMbM
      GzRVU9E1hXhCTRmenA7w3jvvMhyMYTHfTldC49PjHxGeTqRNOz7l58zFdnz9N3A4HBnZ4/J4
      8bhzKfTmZZYBSSI82E5zX4CM2ypdx9fXw9Ej7zPkn8rkJZw4+TFGY+Y1sRKLcPHcGT4+c5H5
      fGtdS3C9b+ge0tdBU7jW3MS7R46TVOcfeRwd6iOmSrPEcieL5gKlIxjwY7Q5QKfJlHcAAAih
      SURBVNcoKvTO/wCQ4/FiUIYza8JlG2YpislViMdumT8+0N50nqHxEAajEaMhzYex5vLkM8+Q
      MDiJx6YBiIXGiMs2jAYwW6xp07c48thcXU5ZXQOPriud3yBJIt/t4EzzDXwjAV54eg8Gw9zi
      V5MxGp7+U0hmUpBvMu4PUuDNY8e+p/E65/9Wcd3Kv//eXzIRy6yABof6sJbVcWDv1swqL8lI
      SXEBo6Nj88fVVc6e/JSobsRdkM8Lz+zNqPZ2e4uIjY4TnE5Qkn93+JK3AAYtztW2LoxGI5m6
      1QZzDt48F9dv3Jg3riRJRKamUab9vHv0REbp19ZvI9/lJM/jRk1Ti0iyTCzs59z58/QPjnz+
      LmhpbkWS5HnFKZPg1CfHOXWxNSObLBYz09PTyGqEs5da5q09ZYOJnpYLDE5kLoCpUAAFOeMW
      w6RH+ejEeUhTSXwRp7eI6eFuPvmsaV77AWSjEU1Joqra/PElAzt2bSc4HmJkeDij9AHMZhOa
      rpFUUrf0Sy4AZ34JVUUekprG+PhExs8pSpI1ZWWZvcORw7g/SMXazOID6EoM3/AY8hw1rdtb
      jNuVi8t+s7a3uArYvW0Tug7yPB200ESIvIJ8xsZGMrInx12IORmgd3CcwqKCeeOr8WmiSQ2r
      xZRR+gA5zlyU8DiTsdSF4YsoShyH1cx4IDORBUd8JGRzxnlWYlOQU8DLB5/JrCDKVvI8dnJz
      czMWsY6Eze4kx5T632tZ+gA5OWamI1GMRvO8cWPTk0xNx0kkkvMWslvY7DaiUxGMpvnTv4lM
      rjsXe45tzliJWISTHx9lcOLm2afx8ARHPzoBJjO+/oE5n62u30rwRgcGs33OeLdIRkOMhDSe
      3r8LNTF/X0k2GgkFg5B5DwCXy4lyDyf3ORwumpubcbsz68cUr9tAdLQfs8VGPKHME1shEpNx
      mxMc+/Qsmawj6LhwnLb+IJqeea4D4yOMjY9w4vhHTE7dLeRlEcDE6BibdjzBji0188a15riw
      6AoGi4HzZz7l9MWWeZ+JBAPkV9Ty/BOPZ/hhNILBKTzeImym9J8gODFGw97n2FB+03k0O/LY
      u3sHBl3FPk/nNuTrw+guxutxZWRRYjrOIw2PcubUKfoGhubNh5qIk+Nw4vMNZewOKIpKXmEZ
      HntmrcZkKEhtXR1+/2RG8cPj42xs3EFwpI8TZ87OHTkR4o03j5BQVXq6ujMQgE7Zxu389Xe+
      wZf/5KmM7AGYjmtUlxdTu+1xXCn+zZZFAGanh5Huq3T3z980akqSuJZkuN9HefUmSvLnr30c
      3lJMER+fNbVnWBhkdC2JoqpoaWpDTUkQ1w1UeM2cb+4CbvY3jGYzBlkiGovM+YbQZJh4QiHX
      OX8LoGtxyMkjPj7Khk0N1G+av6Iw2RzEpyfJsWdWOwOMDvuYmo6iZrhy0ZPn5UZfPyVFnozi
      OwuL6Dx/khxvBfWPzJMHo4Ov/NmfcujQIV575cD8BVGL88b/+wPnz57gp//8S+IZ2DMdibB7
      907GpnQ2rEk9ALPko0BocT45fpKCijXEEsl5o6tKnBF/hI21NVicDiorKuaMr6vTvPPWe/SN
      Bdhozqy2RVdJKjqRsSGmExrOFAM6075uKKyjrtBCKHz7cyfjMaKxOEVr5x7Ryi8px3q1h6HR
      Ceqq18wZV4uO0tYxga2gBi06gde7ed4sJKKTmF0l7H5sa8buQCIWxeIyI2f4QGdnNy9/47sU
      ZDBiBDDWew1j0QZ2bq3F651nxE+2UJB/M11PfiZDv0aefPFFCrx5bK6dyKjgnvvkKNNGG3Z7
      Dsl4Ehx352PpWwDZwosH/4SN1evweHLnjW6yOih1mLh6Y5igf3j+9PUksSS4nDkk5vU7bxKO
      xKisKsfqcGNL0zlylNcQ6jjL+4c/RDPe7itMBibQJCPNF05xqaUz7TuGezpRbHmsLS2c1x7J
      4mZqYojxoWsY7e4McqAQiRupKHIy6BvNIP5NYkkVh92Wdkz8TpKJGHabxD/+5B8yHmky252M
      djfzdoajcfeEbGRNeSlWq5XSNWUZCeCRbbt44bmbLmw0mbrjv/QtAGCRk3zY0sN+hwcK5hdB
      Uc1mqjp6qFhfN29cyZjLt77zrXuyp621le27nsR+6QzRpIrLluIzSAZ27X8GTZu9JiU3vwDL
      eJyigo00bNqQ9h1rah9lo3GI4MQEVMw9FyAbnTx34EDmGUiEaL7Wh6ab2bBubcYtQH19PXEV
      phI67nk8sytnTlH5yCY2jeuMh6Yp9zrnTd/icLO1sZGonvnI1FJSUHhzNG1tTT3pus3L0gcw
      WHKoKHDRlUEfIDY5xhu/e4OO/lEGB+YeablfNq4r5/333qW9fxybea6RJmlmyvwWZpOJrubL
      JOT0E2EAsfAkHx07Qv9o5kO/GWN0YNYjKMkwTa2dGXeCJwPDvH/4CJOR+T3ouvpHuXjuKkhJ
      bNb5R9c0Jcrp0+fx+XwUFhbPG385ublMInXYsrQAAKqqU7GufN54SjJGPAk5VguxaGZLJ+6V
      3IIyDhzIfM7gFmp8kmMfnSQ3Lw+zeW4B2Dz5bK/fys49j9+vmemRLex58ul7emTYN8TGTfX0
      R5zUls3fV8rJLeDgS1/J3CSjjWf/5AAnPv6Exxvmb7lXCkveAsTCE1y82k5/f39Gg7eO/DV8
      81tf59997685+OzepTbvnggNdjBtyWNkZIT83PRzCLoa58yFVvbu3c3F8+eX0cL0dLU2MxqY
      oqbUytXrwUVPX1MiHHnnHW4M9HHmUlvGrdKDZslbAKPFhsUIgUicqjUZrItZweSt285fVOko
      6vNzLtWNTvrxBwOcO3sOm2dluAOP793DqZOnCEcV9tTP78/fK7LRzvMHDy56ukvNot8Qk454
      JMiQP3bX0mCB4EGybAIQCFYiYie7IKsRAhBkNUIAgqxGCECQ1QgBCLIaIQBBVvP/AelP44Hb
      PSefAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='The top 10 happiest countries in the world' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='The top 10 happiest countries in the world (2)' width='192'>
      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
      Jq6hQDHjAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
